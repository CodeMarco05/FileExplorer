<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="2949491229"><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (10,547,425 samples, 0.36%)</title><rect x="0.0003%" y="597" width="0.3576%" height="15" fill="rgb(227,0,7)" fg:x="9303" fg:w="10547425"/><text x="0.2503%" y="607.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (33,022,135 samples, 1.12%)</title><rect x="0.3579%" y="597" width="1.1196%" height="15" fill="rgb(217,0,24)" fg:x="10556728" fg:w="33022135"/><text x="0.6079%" y="607.50"></text></g><g><title>[src-tauri] (4,662,665 samples, 0.16%)</title><rect x="1.4775%" y="597" width="0.1581%" height="15" fill="rgb(221,193,54)" fg:x="43578863" fg:w="4662665"/><text x="1.7275%" y="607.50"></text></g><g><title>src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance (4,662,665 samples, 0.16%)</title><rect x="1.4775%" y="581" width="0.1581%" height="15" fill="rgb(248,212,6)" fg:x="43578863" fg:w="4662665"/><text x="1.7275%" y="591.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (16,156,327 samples, 0.55%)</title><rect x="1.6356%" y="581" width="0.5478%" height="15" fill="rgb(208,68,35)" fg:x="48241528" fg:w="16156327"/><text x="1.8856%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (21,216,212 samples, 0.72%)</title><rect x="2.1834%" y="581" width="0.7193%" height="15" fill="rgb(232,128,0)" fg:x="64397855" fg:w="21216212"/><text x="2.4334%" y="591.50"></text></g><g><title>[unknown] (52,631,317 samples, 1.78%)</title><rect x="1.6356%" y="597" width="1.7844%" height="15" fill="rgb(207,160,47)" fg:x="48241528" fg:w="52631317"/><text x="1.8856%" y="607.50">[..</text></g><g><title>src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance (15,258,778 samples, 0.52%)</title><rect x="2.9027%" y="581" width="0.5173%" height="15" fill="rgb(228,23,34)" fg:x="85614067" fg:w="15258778"/><text x="3.1527%" y="591.50"></text></g><g><title>__dso_handle (5,431,264 samples, 0.18%)</title><rect x="3.4298%" y="597" width="0.1841%" height="15" fill="rgb(218,30,26)" fg:x="101162587" fg:w="5431264"/><text x="3.6798%" y="607.50"></text></g><g><title>src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance::add_paths_from_dir (5,431,264 samples, 0.18%)</title><rect x="3.4298%" y="581" width="0.1841%" height="15" fill="rgb(220,122,19)" fg:x="101162587" fg:w="5431264"/><text x="3.6798%" y="591.50"></text></g><g><title>__memcmp_evex_movbe (5,297,436 samples, 0.18%)</title><rect x="3.6143%" y="597" width="0.1796%" height="15" fill="rgb(250,228,42)" fg:x="106603551" fg:w="5297436"/><text x="3.8643%" y="607.50"></text></g><g><title>_int_free (5,442,373 samples, 0.18%)</title><rect x="3.7939%" y="597" width="0.1845%" height="15" fill="rgb(240,193,28)" fg:x="111900987" fg:w="5442373"/><text x="4.0439%" y="607.50"></text></g><g><title>_int_malloc (32,170,344 samples, 1.09%)</title><rect x="3.9784%" y="597" width="1.0907%" height="15" fill="rgb(216,20,37)" fg:x="117343360" fg:w="32170344"/><text x="4.2284%" y="607.50"></text></g><g><title>&lt;&amp;alloc::string::String as core::str::pattern::Pattern&gt;::into_searcher (5,142,004 samples, 0.17%)</title><rect x="5.7329%" y="421" width="0.1743%" height="15" fill="rgb(206,188,39)" fg:x="169092327" fg:w="5142004"/><text x="5.9829%" y="431.50"></text></g><g><title>[unknown] (5,142,004 samples, 0.17%)</title><rect x="5.7329%" y="405" width="0.1743%" height="15" fill="rgb(217,207,13)" fg:x="169092327" fg:w="5142004"/><text x="5.9829%" y="415.50"></text></g><g><title>__memcmp_evex_movbe (5,142,004 samples, 0.17%)</title><rect x="5.7329%" y="389" width="0.1743%" height="15" fill="rgb(231,73,38)" fg:x="169092327" fg:w="5142004"/><text x="5.9829%" y="399.50"></text></g><g><title>__folio_throttle_swaprate (4,833,873 samples, 0.16%)</title><rect x="5.9073%" y="261" width="0.1639%" height="15" fill="rgb(225,20,46)" fg:x="174234331" fg:w="4833873"/><text x="6.1573%" y="271.50"></text></g><g><title>blk_cgroup_congested (4,833,873 samples, 0.16%)</title><rect x="5.9073%" y="245" width="0.1639%" height="15" fill="rgb(210,31,41)" fg:x="174234331" fg:w="4833873"/><text x="6.1573%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (20,422,410 samples, 0.69%)</title><rect x="5.9073%" y="421" width="0.6924%" height="15" fill="rgb(221,200,47)" fg:x="174234331" fg:w="20422410"/><text x="6.1573%" y="431.50"></text></g><g><title>malloc (20,422,410 samples, 0.69%)</title><rect x="5.9073%" y="405" width="0.6924%" height="15" fill="rgb(226,26,5)" fg:x="174234331" fg:w="20422410"/><text x="6.1573%" y="415.50"></text></g><g><title>_int_malloc (20,422,410 samples, 0.69%)</title><rect x="5.9073%" y="389" width="0.6924%" height="15" fill="rgb(249,33,26)" fg:x="174234331" fg:w="20422410"/><text x="6.1573%" y="399.50"></text></g><g><title>asm_exc_page_fault (20,422,410 samples, 0.69%)</title><rect x="5.9073%" y="373" width="0.6924%" height="15" fill="rgb(235,183,28)" fg:x="174234331" fg:w="20422410"/><text x="6.1573%" y="383.50"></text></g><g><title>exc_page_fault (20,422,410 samples, 0.69%)</title><rect x="5.9073%" y="357" width="0.6924%" height="15" fill="rgb(221,5,38)" fg:x="174234331" fg:w="20422410"/><text x="6.1573%" y="367.50"></text></g><g><title>do_user_addr_fault (20,422,410 samples, 0.69%)</title><rect x="5.9073%" y="341" width="0.6924%" height="15" fill="rgb(247,18,42)" fg:x="174234331" fg:w="20422410"/><text x="6.1573%" y="351.50"></text></g><g><title>handle_mm_fault (20,422,410 samples, 0.69%)</title><rect x="5.9073%" y="325" width="0.6924%" height="15" fill="rgb(241,131,45)" fg:x="174234331" fg:w="20422410"/><text x="6.1573%" y="335.50"></text></g><g><title>__handle_mm_fault (20,422,410 samples, 0.69%)</title><rect x="5.9073%" y="309" width="0.6924%" height="15" fill="rgb(249,31,29)" fg:x="174234331" fg:w="20422410"/><text x="6.1573%" y="319.50"></text></g><g><title>do_anonymous_page (20,422,410 samples, 0.69%)</title><rect x="5.9073%" y="293" width="0.6924%" height="15" fill="rgb(225,111,53)" fg:x="174234331" fg:w="20422410"/><text x="6.1573%" y="303.50"></text></g><g><title>alloc_anon_folio (20,422,410 samples, 0.69%)</title><rect x="5.9073%" y="277" width="0.6924%" height="15" fill="rgb(238,160,17)" fg:x="174234331" fg:w="20422410"/><text x="6.1573%" y="287.50"></text></g><g><title>vma_alloc_folio_noprof (15,588,537 samples, 0.53%)</title><rect x="6.0712%" y="261" width="0.5285%" height="15" fill="rgb(214,148,48)" fg:x="179068204" fg:w="15588537"/><text x="6.3212%" y="271.50"></text></g><g><title>folio_alloc_mpol_noprof (15,588,537 samples, 0.53%)</title><rect x="6.0712%" y="245" width="0.5285%" height="15" fill="rgb(232,36,49)" fg:x="179068204" fg:w="15588537"/><text x="6.3212%" y="255.50"></text></g><g><title>alloc_pages_mpol (15,588,537 samples, 0.53%)</title><rect x="6.0712%" y="229" width="0.5285%" height="15" fill="rgb(209,103,24)" fg:x="179068204" fg:w="15588537"/><text x="6.3212%" y="239.50"></text></g><g><title>__alloc_frozen_pages_noprof (10,421,518 samples, 0.35%)</title><rect x="6.2463%" y="213" width="0.3533%" height="15" fill="rgb(229,88,8)" fg:x="184235223" fg:w="10421518"/><text x="6.4963%" y="223.50"></text></g><g><title>get_page_from_freelist (5,061,344 samples, 0.17%)</title><rect x="6.4281%" y="197" width="0.1716%" height="15" fill="rgb(213,181,19)" fg:x="189595397" fg:w="5061344"/><text x="6.6781%" y="207.50"></text></g><g><title>rmqueue.isra.0 (5,061,344 samples, 0.17%)</title><rect x="6.4281%" y="181" width="0.1716%" height="15" fill="rgb(254,191,54)" fg:x="189595397" fg:w="5061344"/><text x="6.6781%" y="191.50"></text></g><g><title>rmqueue_pcplist (5,061,344 samples, 0.17%)</title><rect x="6.4281%" y="165" width="0.1716%" height="15" fill="rgb(241,83,37)" fg:x="189595397" fg:w="5061344"/><text x="6.6781%" y="175.50"></text></g><g><title>__rmqueue_pcplist (5,061,344 samples, 0.17%)</title><rect x="6.4281%" y="149" width="0.1716%" height="15" fill="rgb(233,36,39)" fg:x="189595397" fg:w="5061344"/><text x="6.6781%" y="159.50"></text></g><g><title>rmqueue_bulk (5,061,344 samples, 0.17%)</title><rect x="6.4281%" y="133" width="0.1716%" height="15" fill="rgb(226,3,54)" fg:x="189595397" fg:w="5061344"/><text x="6.6781%" y="143.50"></text></g><g><title>__list_del_entry_valid_or_report (5,061,344 samples, 0.17%)</title><rect x="6.4281%" y="117" width="0.1716%" height="15" fill="rgb(245,192,40)" fg:x="189595397" fg:w="5061344"/><text x="6.6781%" y="127.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,759,207 samples, 0.16%)</title><rect x="6.5997%" y="421" width="0.1614%" height="15" fill="rgb(238,167,29)" fg:x="194656741" fg:w="4759207"/><text x="6.8497%" y="431.50"></text></g><g><title>core::slice::memchr::memchr_aligned (4,759,207 samples, 0.16%)</title><rect x="6.5997%" y="405" width="0.1614%" height="15" fill="rgb(232,182,51)" fg:x="194656741" fg:w="4759207"/><text x="6.8497%" y="415.50"></text></g><g><title>__memset_avx512_unaligned_erms (5,296,744 samples, 0.18%)</title><rect x="6.7610%" y="421" width="0.1796%" height="15" fill="rgb(231,60,39)" fg:x="199415948" fg:w="5296744"/><text x="7.0110%" y="431.50"></text></g><g><title>_int_free (4,743,071 samples, 0.16%)</title><rect x="6.9406%" y="421" width="0.1608%" height="15" fill="rgb(208,69,12)" fg:x="204712692" fg:w="4743071"/><text x="7.1906%" y="431.50"></text></g><g><title>_int_free_create_chunk (5,393,353 samples, 0.18%)</title><rect x="7.1014%" y="421" width="0.1829%" height="15" fill="rgb(235,93,37)" fg:x="209455763" fg:w="5393353"/><text x="7.3514%" y="431.50"></text></g><g><title>_int_malloc (10,182,616 samples, 0.35%)</title><rect x="7.2843%" y="421" width="0.3452%" height="15" fill="rgb(213,116,39)" fg:x="214849116" fg:w="10182616"/><text x="7.5343%" y="431.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (5,002,887 samples, 0.17%)</title><rect x="7.6295%" y="421" width="0.1696%" height="15" fill="rgb(222,207,29)" fg:x="225031732" fg:w="5002887"/><text x="7.8795%" y="431.50"></text></g><g><title>_int_malloc (5,002,887 samples, 0.17%)</title><rect x="7.6295%" y="405" width="0.1696%" height="15" fill="rgb(206,96,30)" fg:x="225031732" fg:w="5002887"/><text x="7.8795%" y="415.50"></text></g><g><title>asm_exc_page_fault (4,394,982 samples, 0.15%)</title><rect x="7.7991%" y="421" width="0.1490%" height="15" fill="rgb(218,138,4)" fg:x="230034619" fg:w="4394982"/><text x="8.0491%" y="431.50"></text></g><g><title>exc_page_fault (4,394,982 samples, 0.15%)</title><rect x="7.7991%" y="405" width="0.1490%" height="15" fill="rgb(250,191,14)" fg:x="230034619" fg:w="4394982"/><text x="8.0491%" y="415.50"></text></g><g><title>tlb_finish_mmu (5,160,852 samples, 0.17%)</title><rect x="7.9481%" y="261" width="0.1750%" height="15" fill="rgb(239,60,40)" fg:x="234429601" fg:w="5160852"/><text x="8.1981%" y="271.50"></text></g><g><title>__tlb_batch_free_encoded_pages (5,160,852 samples, 0.17%)</title><rect x="7.9481%" y="245" width="0.1750%" height="15" fill="rgb(206,27,48)" fg:x="234429601" fg:w="5160852"/><text x="8.1981%" y="255.50"></text></g><g><title>free_pages_and_swap_cache (5,160,852 samples, 0.17%)</title><rect x="7.9481%" y="229" width="0.1750%" height="15" fill="rgb(225,35,8)" fg:x="234429601" fg:w="5160852"/><text x="8.1981%" y="239.50"></text></g><g><title>folios_put_refs (5,160,852 samples, 0.17%)</title><rect x="7.9481%" y="213" width="0.1750%" height="15" fill="rgb(250,213,24)" fg:x="234429601" fg:w="5160852"/><text x="8.1981%" y="223.50"></text></g><g><title>__mem_cgroup_uncharge_folios (5,160,852 samples, 0.17%)</title><rect x="7.9481%" y="197" width="0.1750%" height="15" fill="rgb(247,123,22)" fg:x="234429601" fg:w="5160852"/><text x="8.1981%" y="207.50"></text></g><g><title>__rcu_read_unlock (5,160,852 samples, 0.17%)</title><rect x="7.9481%" y="181" width="0.1750%" height="15" fill="rgb(231,138,38)" fg:x="234429601" fg:w="5160852"/><text x="8.1981%" y="191.50"></text></g><g><title>__munmap (15,155,546 samples, 0.51%)</title><rect x="7.9481%" y="405" width="0.5138%" height="15" fill="rgb(231,145,46)" fg:x="234429601" fg:w="15155546"/><text x="8.1981%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15,155,546 samples, 0.51%)</title><rect x="7.9481%" y="389" width="0.5138%" height="15" fill="rgb(251,118,11)" fg:x="234429601" fg:w="15155546"/><text x="8.1981%" y="399.50"></text></g><g><title>do_syscall_64 (15,155,546 samples, 0.51%)</title><rect x="7.9481%" y="373" width="0.5138%" height="15" fill="rgb(217,147,25)" fg:x="234429601" fg:w="15155546"/><text x="8.1981%" y="383.50"></text></g><g><title>__x64_sys_munmap (15,155,546 samples, 0.51%)</title><rect x="7.9481%" y="357" width="0.5138%" height="15" fill="rgb(247,81,37)" fg:x="234429601" fg:w="15155546"/><text x="8.1981%" y="367.50"></text></g><g><title>__vm_munmap (15,155,546 samples, 0.51%)</title><rect x="7.9481%" y="341" width="0.5138%" height="15" fill="rgb(209,12,38)" fg:x="234429601" fg:w="15155546"/><text x="8.1981%" y="351.50"></text></g><g><title>do_vmi_munmap (15,155,546 samples, 0.51%)</title><rect x="7.9481%" y="325" width="0.5138%" height="15" fill="rgb(227,1,9)" fg:x="234429601" fg:w="15155546"/><text x="8.1981%" y="335.50"></text></g><g><title>do_vmi_align_munmap (15,155,546 samples, 0.51%)</title><rect x="7.9481%" y="309" width="0.5138%" height="15" fill="rgb(248,47,43)" fg:x="234429601" fg:w="15155546"/><text x="8.1981%" y="319.50"></text></g><g><title>vms_complete_munmap_vmas (15,155,546 samples, 0.51%)</title><rect x="7.9481%" y="293" width="0.5138%" height="15" fill="rgb(221,10,30)" fg:x="234429601" fg:w="15155546"/><text x="8.1981%" y="303.50"></text></g><g><title>vms_clear_ptes (15,155,546 samples, 0.51%)</title><rect x="7.9481%" y="277" width="0.5138%" height="15" fill="rgb(210,229,1)" fg:x="234429601" fg:w="15155546"/><text x="8.1981%" y="287.50"></text></g><g><title>unmap_vmas (9,994,694 samples, 0.34%)</title><rect x="8.1231%" y="261" width="0.3389%" height="15" fill="rgb(222,148,37)" fg:x="239590453" fg:w="9994694"/><text x="8.3731%" y="271.50"></text></g><g><title>unmap_page_range (9,994,694 samples, 0.34%)</title><rect x="8.1231%" y="245" width="0.3389%" height="15" fill="rgb(234,67,33)" fg:x="239590453" fg:w="9994694"/><text x="8.3731%" y="255.50"></text></g><g><title>zap_pud_range.isra.0 (9,994,694 samples, 0.34%)</title><rect x="8.1231%" y="229" width="0.3389%" height="15" fill="rgb(247,98,35)" fg:x="239590453" fg:w="9994694"/><text x="8.3731%" y="239.50"></text></g><g><title>zap_pmd_range.isra.0 (9,994,694 samples, 0.34%)</title><rect x="8.1231%" y="213" width="0.3389%" height="15" fill="rgb(247,138,52)" fg:x="239590453" fg:w="9994694"/><text x="8.3731%" y="223.50"></text></g><g><title>zap_pte_range (9,994,694 samples, 0.34%)</title><rect x="8.1231%" y="197" width="0.3389%" height="15" fill="rgb(213,79,30)" fg:x="239590453" fg:w="9994694"/><text x="8.3731%" y="207.50"></text></g><g><title>zap_present_ptes.constprop.0 (9,994,694 samples, 0.34%)</title><rect x="8.1231%" y="181" width="0.3389%" height="15" fill="rgb(246,177,23)" fg:x="239590453" fg:w="9994694"/><text x="8.3731%" y="191.50"></text></g><g><title>_int_free (4,459,070 samples, 0.15%)</title><rect x="8.6343%" y="389" width="0.1512%" height="15" fill="rgb(230,62,27)" fg:x="254667383" fg:w="4459070"/><text x="8.8843%" y="399.50"></text></g><g><title>malloc_consolidate (4,833,156 samples, 0.16%)</title><rect x="8.9690%" y="357" width="0.1639%" height="15" fill="rgb(216,154,8)" fg:x="264539555" fg:w="4833156"/><text x="9.2190%" y="367.50"></text></g><g><title>malloc_consolidate (15,450,102 samples, 0.52%)</title><rect x="8.7855%" y="373" width="0.5238%" height="15" fill="rgb(244,35,45)" fg:x="259126453" fg:w="15450102"/><text x="9.0355%" y="383.50"></text></g><g><title>unlink_chunk.isra.0 (5,203,844 samples, 0.18%)</title><rect x="9.1329%" y="357" width="0.1764%" height="15" fill="rgb(251,115,12)" fg:x="269372711" fg:w="5203844"/><text x="9.3829%" y="367.50"></text></g><g><title>_int_free (34,894,861 samples, 1.18%)</title><rect x="8.4620%" y="405" width="1.1831%" height="15" fill="rgb(240,54,50)" fg:x="249585147" fg:w="34894861"/><text x="8.7120%" y="415.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (25,353,555 samples, 0.86%)</title><rect x="8.7855%" y="389" width="0.8596%" height="15" fill="rgb(233,84,52)" fg:x="259126453" fg:w="25353555"/><text x="9.0355%" y="399.50"></text></g><g><title>unlink_chunk.isra.0 (9,903,453 samples, 0.34%)</title><rect x="9.3093%" y="373" width="0.3358%" height="15" fill="rgb(207,117,47)" fg:x="274576555" fg:w="9903453"/><text x="9.5593%" y="383.50"></text></g><g><title>cfree@GLIBC_2.2.5 (55,182,216 samples, 1.87%)</title><rect x="7.9481%" y="421" width="1.8709%" height="15" fill="rgb(249,43,39)" fg:x="234429601" fg:w="55182216"/><text x="8.1981%" y="431.50">c..</text></g><g><title>cfree@GLIBC_2.2.5 (5,131,809 samples, 0.17%)</title><rect x="9.6451%" y="405" width="0.1740%" height="15" fill="rgb(209,38,44)" fg:x="284480008" fg:w="5131809"/><text x="9.8951%" y="415.50"></text></g><g><title>core::slice::memchr::memchr_aligned (9,258,811 samples, 0.31%)</title><rect x="9.8190%" y="421" width="0.3139%" height="15" fill="rgb(236,212,23)" fg:x="289611817" fg:w="9258811"/><text x="10.0690%" y="431.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (14,308,796 samples, 0.49%)</title><rect x="10.1330%" y="421" width="0.4851%" height="15" fill="rgb(242,79,21)" fg:x="298870628" fg:w="14308796"/><text x="10.3830%" y="431.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (4,513,554 samples, 0.15%)</title><rect x="10.4651%" y="405" width="0.1530%" height="15" fill="rgb(211,96,35)" fg:x="308665870" fg:w="4513554"/><text x="10.7151%" y="415.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (4,513,554 samples, 0.15%)</title><rect x="10.4651%" y="389" width="0.1530%" height="15" fill="rgb(253,215,40)" fg:x="308665870" fg:w="4513554"/><text x="10.7151%" y="399.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,051,734 samples, 0.17%)</title><rect x="10.6181%" y="405" width="0.1713%" height="15" fill="rgb(211,81,21)" fg:x="313179424" fg:w="5051734"/><text x="10.8681%" y="415.50"></text></g><g><title>[unknown] (5,378,256 samples, 0.18%)</title><rect x="10.7894%" y="405" width="0.1823%" height="15" fill="rgb(208,190,38)" fg:x="318231158" fg:w="5378256"/><text x="11.0394%" y="415.50"></text></g><g><title>__rdl_alloc (5,378,256 samples, 0.18%)</title><rect x="10.7894%" y="389" width="0.1823%" height="15" fill="rgb(235,213,38)" fg:x="318231158" fg:w="5378256"/><text x="11.0394%" y="399.50"></text></g><g><title>_int_malloc (9,970,233 samples, 0.34%)</title><rect x="10.9717%" y="405" width="0.3380%" height="15" fill="rgb(237,122,38)" fg:x="323609414" fg:w="9970233"/><text x="11.2217%" y="415.50"></text></g><g><title>malloc (9,970,233 samples, 0.34%)</title><rect x="10.9717%" y="389" width="0.3380%" height="15" fill="rgb(244,218,35)" fg:x="323609414" fg:w="9970233"/><text x="11.2217%" y="399.50"></text></g><g><title>malloc (25,283,705 samples, 0.86%)</title><rect x="10.6181%" y="421" width="0.8572%" height="15" fill="rgb(240,68,47)" fg:x="313179424" fg:w="25283705"/><text x="10.8681%" y="431.50"></text></g><g><title>core::slice::memchr::memchr_aligned (4,883,482 samples, 0.17%)</title><rect x="11.3097%" y="405" width="0.1656%" height="15" fill="rgb(210,16,53)" fg:x="333579647" fg:w="4883482"/><text x="11.5597%" y="415.50"></text></g><g><title>__memcpy (5,226,768 samples, 0.18%)</title><rect x="12.7857%" y="229" width="0.1772%" height="15" fill="rgb(235,124,12)" fg:x="377113239" fg:w="5226768"/><text x="13.0357%" y="239.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (21,039,248 samples, 0.71%)</title><rect x="12.4330%" y="373" width="0.7133%" height="15" fill="rgb(224,169,11)" fg:x="366709534" fg:w="21039248"/><text x="12.6830%" y="383.50"></text></g><g><title>&lt;std::sys::pal::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (21,039,248 samples, 0.71%)</title><rect x="12.4330%" y="357" width="0.7133%" height="15" fill="rgb(250,166,2)" fg:x="366709534" fg:w="21039248"/><text x="12.6830%" y="367.50"></text></g><g><title>__GI___readdir64 (21,039,248 samples, 0.71%)</title><rect x="12.4330%" y="341" width="0.7133%" height="15" fill="rgb(242,216,29)" fg:x="366709534" fg:w="21039248"/><text x="12.6830%" y="351.50"></text></g><g><title>__GI___getdents64 (21,039,248 samples, 0.71%)</title><rect x="12.4330%" y="325" width="0.7133%" height="15" fill="rgb(230,116,27)" fg:x="366709534" fg:w="21039248"/><text x="12.6830%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21,039,248 samples, 0.71%)</title><rect x="12.4330%" y="309" width="0.7133%" height="15" fill="rgb(228,99,48)" fg:x="366709534" fg:w="21039248"/><text x="12.6830%" y="319.50"></text></g><g><title>do_syscall_64 (21,039,248 samples, 0.71%)</title><rect x="12.4330%" y="293" width="0.7133%" height="15" fill="rgb(253,11,6)" fg:x="366709534" fg:w="21039248"/><text x="12.6830%" y="303.50"></text></g><g><title>__x64_sys_getdents64 (21,039,248 samples, 0.71%)</title><rect x="12.4330%" y="277" width="0.7133%" height="15" fill="rgb(247,143,39)" fg:x="366709534" fg:w="21039248"/><text x="12.6830%" y="287.50"></text></g><g><title>iterate_dir (21,039,248 samples, 0.71%)</title><rect x="12.4330%" y="261" width="0.7133%" height="15" fill="rgb(236,97,10)" fg:x="366709534" fg:w="21039248"/><text x="12.6830%" y="271.50"></text></g><g><title>btrfs_real_readdir (21,039,248 samples, 0.71%)</title><rect x="12.4330%" y="245" width="0.7133%" height="15" fill="rgb(233,208,19)" fg:x="366709534" fg:w="21039248"/><text x="12.6830%" y="255.50"></text></g><g><title>btrfs_release_path (5,408,775 samples, 0.18%)</title><rect x="12.9629%" y="229" width="0.1834%" height="15" fill="rgb(216,164,2)" fg:x="382340007" fg:w="5408775"/><text x="13.2129%" y="239.50"></text></g><g><title>release_extent_buffer (5,408,775 samples, 0.18%)</title><rect x="12.9629%" y="213" width="0.1834%" height="15" fill="rgb(220,129,5)" fg:x="382340007" fg:w="5408775"/><text x="13.2129%" y="223.50"></text></g><g><title>_raw_spin_unlock (5,408,775 samples, 0.18%)</title><rect x="12.9629%" y="197" width="0.1834%" height="15" fill="rgb(242,17,10)" fg:x="382340007" fg:w="5408775"/><text x="13.2129%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,058,289 samples, 0.54%)</title><rect x="13.1463%" y="373" width="0.5444%" height="15" fill="rgb(242,107,0)" fg:x="387748782" fg:w="16058289"/><text x="13.3963%" y="383.50"></text></g><g><title>fdget_pos (5,443,657 samples, 0.18%)</title><rect x="20.4694%" y="245" width="0.1846%" height="15" fill="rgb(251,28,31)" fg:x="603743975" fg:w="5443657"/><text x="20.7194%" y="255.50"></text></g><g><title>mutex_lock (5,443,657 samples, 0.18%)</title><rect x="20.4694%" y="229" width="0.1846%" height="15" fill="rgb(233,223,10)" fg:x="603743975" fg:w="5443657"/><text x="20.7194%" y="239.50"></text></g><g><title>btrfs_filldir (45,425,820 samples, 1.54%)</title><rect x="22.5904%" y="213" width="1.5401%" height="15" fill="rgb(215,21,27)" fg:x="666301067" fg:w="45425820"/><text x="22.8404%" y="223.50"></text></g><g><title>filldir64 (35,410,516 samples, 1.20%)</title><rect x="22.9299%" y="197" width="1.2006%" height="15" fill="rgb(232,23,21)" fg:x="676316371" fg:w="35410516"/><text x="23.1799%" y="207.50"></text></g><g><title>verify_dirent_name (4,772,412 samples, 0.16%)</title><rect x="23.9687%" y="181" width="0.1618%" height="15" fill="rgb(244,5,23)" fg:x="706954475" fg:w="4772412"/><text x="24.2187%" y="191.50"></text></g><g><title>memchr (4,772,412 samples, 0.16%)</title><rect x="23.9687%" y="165" width="0.1618%" height="15" fill="rgb(226,81,46)" fg:x="706954475" fg:w="4772412"/><text x="24.2187%" y="175.50"></text></g><g><title>btrfs_get_16 (5,437,489 samples, 0.18%)</title><rect x="24.1305%" y="213" width="0.1844%" height="15" fill="rgb(247,70,30)" fg:x="711726887" fg:w="5437489"/><text x="24.3805%" y="223.50"></text></g><g><title>btrfs_bin_search (16,308,273 samples, 0.55%)</title><rect x="24.6807%" y="197" width="0.5529%" height="15" fill="rgb(212,68,19)" fg:x="727954376" fg:w="16308273"/><text x="24.9307%" y="207.50"></text></g><g><title>btrfs_tree_read_lock_nested (5,435,277 samples, 0.18%)</title><rect x="25.2336%" y="197" width="0.1843%" height="15" fill="rgb(240,187,13)" fg:x="744262649" fg:w="5435277"/><text x="25.4836%" y="207.50"></text></g><g><title>down_read (5,435,277 samples, 0.18%)</title><rect x="25.2336%" y="181" width="0.1843%" height="15" fill="rgb(223,113,26)" fg:x="744262649" fg:w="5435277"/><text x="25.4836%" y="191.50"></text></g><g><title>btrfs_get_64 (5,441,192 samples, 0.18%)</title><rect x="25.6021%" y="181" width="0.1845%" height="15" fill="rgb(206,192,2)" fg:x="755131673" fg:w="5441192"/><text x="25.8521%" y="191.50"></text></g><g><title>btrfs_verify_level_key (5,441,418 samples, 0.18%)</title><rect x="25.7866%" y="181" width="0.1845%" height="15" fill="rgb(241,108,4)" fg:x="760572865" fg:w="5441418"/><text x="26.0366%" y="191.50"></text></g><g><title>read_extent_buffer (5,441,418 samples, 0.18%)</title><rect x="25.7866%" y="165" width="0.1845%" height="15" fill="rgb(247,173,49)" fg:x="760572865" fg:w="5441418"/><text x="26.0366%" y="175.50"></text></g><g><title>__memcpy (5,441,418 samples, 0.18%)</title><rect x="25.7866%" y="149" width="0.1845%" height="15" fill="rgb(224,114,35)" fg:x="760572865" fg:w="5441418"/><text x="26.0366%" y="159.50"></text></g><g><title>read_block_for_search (21,753,844 samples, 0.74%)</title><rect x="25.4179%" y="197" width="0.7375%" height="15" fill="rgb(245,159,27)" fg:x="749697926" fg:w="21753844"/><text x="25.6679%" y="207.50"></text></g><g><title>find_extent_buffer (5,437,487 samples, 0.18%)</title><rect x="25.9711%" y="181" width="0.1844%" height="15" fill="rgb(245,172,44)" fg:x="766014283" fg:w="5437487"/><text x="26.2211%" y="191.50"></text></g><g><title>find_extent_buffer_nolock (5,437,487 samples, 0.18%)</title><rect x="25.9711%" y="165" width="0.1844%" height="15" fill="rgb(236,23,11)" fg:x="766014283" fg:w="5437487"/><text x="26.2211%" y="175.50"></text></g><g><title>btrfs_search_slot (59,261,649 samples, 2.01%)</title><rect x="24.3149%" y="213" width="2.0092%" height="15" fill="rgb(205,117,38)" fg:x="717164376" fg:w="59261649"/><text x="24.5649%" y="223.50">b..</text></g><g><title>unlock_up (4,974,255 samples, 0.17%)</title><rect x="26.1554%" y="197" width="0.1686%" height="15" fill="rgb(237,72,25)" fg:x="771451770" fg:w="4974255"/><text x="26.4054%" y="207.50"></text></g><g><title>d_parent_ino (5,435,629 samples, 0.18%)</title><rect x="26.3241%" y="213" width="0.1843%" height="15" fill="rgb(244,70,9)" fg:x="776426025" fg:w="5435629"/><text x="26.5741%" y="223.50"></text></g><g><title>fs_ftype_to_dtype (5,170,780 samples, 0.18%)</title><rect x="26.5084%" y="213" width="0.1753%" height="15" fill="rgb(217,125,39)" fg:x="781861654" fg:w="5170780"/><text x="26.7584%" y="223.50"></text></g><g><title>btrfs_real_readdir (177,935,737 samples, 6.03%)</title><rect x="20.8354%" y="229" width="6.0328%" height="15" fill="rgb(235,36,10)" fg:x="614537995" fg:w="177935737"/><text x="21.0854%" y="239.50">btrfs_re..</text></g><g><title>read_extent_buffer (5,441,298 samples, 0.18%)</title><rect x="26.6837%" y="213" width="0.1845%" height="15" fill="rgb(251,123,47)" fg:x="787032434" fg:w="5441298"/><text x="26.9337%" y="223.50"></text></g><g><title>__GI___readdir64 (193,918,717 samples, 6.57%)</title><rect x="20.4694%" y="325" width="6.5746%" height="15" fill="rgb(221,13,13)" fg:x="603743975" fg:w="193918717"/><text x="20.7194%" y="335.50">__GI___re..</text></g><g><title>__GI___getdents64 (193,918,717 samples, 6.57%)</title><rect x="20.4694%" y="309" width="6.5746%" height="15" fill="rgb(238,131,9)" fg:x="603743975" fg:w="193918717"/><text x="20.7194%" y="319.50">__GI___ge..</text></g><g><title>entry_SYSCALL_64_after_hwframe (193,918,717 samples, 6.57%)</title><rect x="20.4694%" y="293" width="6.5746%" height="15" fill="rgb(211,50,8)" fg:x="603743975" fg:w="193918717"/><text x="20.7194%" y="303.50">entry_SYS..</text></g><g><title>do_syscall_64 (193,918,717 samples, 6.57%)</title><rect x="20.4694%" y="277" width="6.5746%" height="15" fill="rgb(245,182,24)" fg:x="603743975" fg:w="193918717"/><text x="20.7194%" y="287.50">do_syscal..</text></g><g><title>__x64_sys_getdents64 (193,918,717 samples, 6.57%)</title><rect x="20.4694%" y="261" width="6.5746%" height="15" fill="rgb(242,14,37)" fg:x="603743975" fg:w="193918717"/><text x="20.7194%" y="271.50">__x64_sys..</text></g><g><title>iterate_dir (188,475,060 samples, 6.39%)</title><rect x="20.6540%" y="245" width="6.3901%" height="15" fill="rgb(246,228,12)" fg:x="609187632" fg:w="188475060"/><text x="20.9040%" y="255.50">iterate_..</text></g><g><title>touch_atime (5,188,960 samples, 0.18%)</title><rect x="26.8682%" y="229" width="0.1759%" height="15" fill="rgb(213,55,15)" fg:x="792473732" fg:w="5188960"/><text x="27.1182%" y="239.50"></text></g><g><title>&lt;std::sys::pal::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (198,556,581 samples, 6.73%)</title><rect x="20.4694%" y="341" width="6.7319%" height="15" fill="rgb(209,9,3)" fg:x="603743975" fg:w="198556581"/><text x="20.7194%" y="351.50">&lt;std::sys..</text></g><g><title>_int_free_create_chunk (4,637,864 samples, 0.16%)</title><rect x="27.0441%" y="325" width="0.1572%" height="15" fill="rgb(230,59,30)" fg:x="797662692" fg:w="4637864"/><text x="27.2941%" y="335.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (203,964,136 samples, 6.92%)</title><rect x="20.4694%" y="357" width="6.9152%" height="15" fill="rgb(209,121,21)" fg:x="603743975" fg:w="203964136"/><text x="20.7194%" y="367.50">&lt;std::fs:..</text></g><g><title>__GI___readdir64 (5,407,555 samples, 0.18%)</title><rect x="27.2013%" y="341" width="0.1833%" height="15" fill="rgb(220,109,13)" fg:x="802300556" fg:w="5407555"/><text x="27.4513%" y="351.50"></text></g><g><title>__memmove_avx512_unaligned_erms (5,420,391 samples, 0.18%)</title><rect x="27.3847%" y="357" width="0.1838%" height="15" fill="rgb(232,18,1)" fg:x="807708111" fg:w="5420391"/><text x="27.6347%" y="367.50"></text></g><g><title>__pte_offset_map_lock (10,441,903 samples, 0.35%)</title><rect x="27.5684%" y="181" width="0.3540%" height="15" fill="rgb(215,41,42)" fg:x="813128502" fg:w="10441903"/><text x="27.8184%" y="191.50"></text></g><g><title>___pte_offset_map (5,436,175 samples, 0.18%)</title><rect x="27.7381%" y="165" width="0.1843%" height="15" fill="rgb(224,123,36)" fg:x="818134230" fg:w="5436175"/><text x="27.9881%" y="175.50"></text></g><g><title>__folio_throttle_swaprate (5,444,019 samples, 0.18%)</title><rect x="27.9225%" y="165" width="0.1846%" height="15" fill="rgb(240,125,3)" fg:x="823570405" fg:w="5444019"/><text x="28.1725%" y="175.50"></text></g><g><title>blk_cgroup_congested (5,444,019 samples, 0.18%)</title><rect x="27.9225%" y="149" width="0.1846%" height="15" fill="rgb(205,98,50)" fg:x="823570405" fg:w="5444019"/><text x="28.1725%" y="159.50"></text></g><g><title>kthread_blkcg (5,444,019 samples, 0.18%)</title><rect x="27.9225%" y="133" width="0.1846%" height="15" fill="rgb(205,185,37)" fg:x="823570405" fg:w="5444019"/><text x="28.1725%" y="143.50"></text></g><g><title>__mem_cgroup_charge (10,080,721 samples, 0.34%)</title><rect x="28.1070%" y="165" width="0.3418%" height="15" fill="rgb(238,207,15)" fg:x="829014424" fg:w="10080721"/><text x="28.3570%" y="175.50"></text></g><g><title>get_mem_cgroup_from_mm (10,080,721 samples, 0.34%)</title><rect x="28.1070%" y="149" width="0.3418%" height="15" fill="rgb(213,199,42)" fg:x="829014424" fg:w="10080721"/><text x="28.3570%" y="159.50"></text></g><g><title>post_alloc_hook (5,440,608 samples, 0.18%)</title><rect x="28.8073%" y="85" width="0.1845%" height="15" fill="rgb(235,201,11)" fg:x="849668397" fg:w="5440608"/><text x="29.0573%" y="95.50"></text></g><g><title>clear_page_erms (5,440,608 samples, 0.18%)</title><rect x="28.8073%" y="69" width="0.1845%" height="15" fill="rgb(207,46,11)" fg:x="849668397" fg:w="5440608"/><text x="29.0573%" y="79.50"></text></g><g><title>alloc_anon_folio (36,931,606 samples, 1.25%)</title><rect x="27.9225%" y="181" width="1.2521%" height="15" fill="rgb(241,35,35)" fg:x="823570405" fg:w="36931606"/><text x="28.1725%" y="191.50"></text></g><g><title>vma_alloc_folio_noprof (21,406,866 samples, 0.73%)</title><rect x="28.4488%" y="165" width="0.7258%" height="15" fill="rgb(243,32,47)" fg:x="839095145" fg:w="21406866"/><text x="28.6988%" y="175.50"></text></g><g><title>folio_alloc_mpol_noprof (21,406,866 samples, 0.73%)</title><rect x="28.4488%" y="149" width="0.7258%" height="15" fill="rgb(247,202,23)" fg:x="839095145" fg:w="21406866"/><text x="28.6988%" y="159.50"></text></g><g><title>alloc_pages_mpol (10,833,614 samples, 0.37%)</title><rect x="28.8073%" y="133" width="0.3673%" height="15" fill="rgb(219,102,11)" fg:x="849668397" fg:w="10833614"/><text x="29.0573%" y="143.50"></text></g><g><title>__alloc_frozen_pages_noprof (10,833,614 samples, 0.37%)</title><rect x="28.8073%" y="117" width="0.3673%" height="15" fill="rgb(243,110,44)" fg:x="849668397" fg:w="10833614"/><text x="29.0573%" y="127.50"></text></g><g><title>get_page_from_freelist (10,833,614 samples, 0.37%)</title><rect x="28.8073%" y="101" width="0.3673%" height="15" fill="rgb(222,74,54)" fg:x="849668397" fg:w="10833614"/><text x="29.0573%" y="111.50"></text></g><g><title>rmqueue.isra.0 (5,393,006 samples, 0.18%)</title><rect x="28.9917%" y="85" width="0.1828%" height="15" fill="rgb(216,99,12)" fg:x="855109005" fg:w="5393006"/><text x="29.2417%" y="95.50"></text></g><g><title>rmqueue_pcplist (5,393,006 samples, 0.18%)</title><rect x="28.9917%" y="69" width="0.1828%" height="15" fill="rgb(226,22,26)" fg:x="855109005" fg:w="5393006"/><text x="29.2417%" y="79.50"></text></g><g><title>__rmqueue_pcplist (5,393,006 samples, 0.18%)</title><rect x="28.9917%" y="53" width="0.1828%" height="15" fill="rgb(217,163,10)" fg:x="855109005" fg:w="5393006"/><text x="29.2417%" y="63.50"></text></g><g><title>__handle_mm_fault (52,814,679 samples, 1.79%)</title><rect x="27.5684%" y="213" width="1.7906%" height="15" fill="rgb(213,25,53)" fg:x="813128502" fg:w="52814679"/><text x="27.8184%" y="223.50">_..</text></g><g><title>do_anonymous_page (52,814,679 samples, 1.79%)</title><rect x="27.5684%" y="197" width="1.7906%" height="15" fill="rgb(252,105,26)" fg:x="813128502" fg:w="52814679"/><text x="27.8184%" y="207.50">d..</text></g><g><title>folio_add_new_anon_rmap (5,441,170 samples, 0.18%)</title><rect x="29.1746%" y="181" width="0.1845%" height="15" fill="rgb(220,39,43)" fg:x="860502011" fg:w="5441170"/><text x="29.4246%" y="191.50"></text></g><g><title>__folio_mod_stat (5,441,170 samples, 0.18%)</title><rect x="29.1746%" y="165" width="0.1845%" height="15" fill="rgb(229,68,48)" fg:x="860502011" fg:w="5441170"/><text x="29.4246%" y="175.50"></text></g><g><title>__lruvec_stat_mod_folio (5,441,170 samples, 0.18%)</title><rect x="29.1746%" y="149" width="0.1845%" height="15" fill="rgb(252,8,32)" fg:x="860502011" fg:w="5441170"/><text x="29.4246%" y="159.50"></text></g><g><title>__memmove_avx512_unaligned_erms (58,252,398 samples, 1.97%)</title><rect x="27.5684%" y="293" width="1.9750%" height="15" fill="rgb(223,20,43)" fg:x="813128502" fg:w="58252398"/><text x="27.8184%" y="303.50">_..</text></g><g><title>asm_exc_page_fault (58,252,398 samples, 1.97%)</title><rect x="27.5684%" y="277" width="1.9750%" height="15" fill="rgb(229,81,49)" fg:x="813128502" fg:w="58252398"/><text x="27.8184%" y="287.50">a..</text></g><g><title>exc_page_fault (58,252,398 samples, 1.97%)</title><rect x="27.5684%" y="261" width="1.9750%" height="15" fill="rgb(236,28,36)" fg:x="813128502" fg:w="58252398"/><text x="27.8184%" y="271.50">e..</text></g><g><title>do_user_addr_fault (58,252,398 samples, 1.97%)</title><rect x="27.5684%" y="245" width="1.9750%" height="15" fill="rgb(249,185,26)" fg:x="813128502" fg:w="58252398"/><text x="27.8184%" y="255.50">d..</text></g><g><title>handle_mm_fault (58,252,398 samples, 1.97%)</title><rect x="27.5684%" y="229" width="1.9750%" height="15" fill="rgb(249,174,33)" fg:x="813128502" fg:w="58252398"/><text x="27.8184%" y="239.50">h..</text></g><g><title>count_memcg_events.constprop.0 (5,437,719 samples, 0.18%)</title><rect x="29.3591%" y="213" width="0.1844%" height="15" fill="rgb(233,201,37)" fg:x="865943181" fg:w="5437719"/><text x="29.6091%" y="223.50"></text></g><g><title>__count_memcg_events (5,437,719 samples, 0.18%)</title><rect x="29.3591%" y="197" width="0.1844%" height="15" fill="rgb(221,78,26)" fg:x="865943181" fg:w="5437719"/><text x="29.6091%" y="207.50"></text></g><g><title>asm_exc_page_fault (5,045,785 samples, 0.17%)</title><rect x="29.5434%" y="277" width="0.1711%" height="15" fill="rgb(250,127,30)" fg:x="871380900" fg:w="5045785"/><text x="29.7934%" y="287.50"></text></g><g><title>exc_page_fault (5,045,785 samples, 0.17%)</title><rect x="29.5434%" y="261" width="0.1711%" height="15" fill="rgb(230,49,44)" fg:x="871380900" fg:w="5045785"/><text x="29.7934%" y="271.50"></text></g><g><title>do_user_addr_fault (5,045,785 samples, 0.17%)</title><rect x="29.5434%" y="245" width="0.1711%" height="15" fill="rgb(229,67,23)" fg:x="871380900" fg:w="5045785"/><text x="29.7934%" y="255.50"></text></g><g><title>handle_mm_fault (5,045,785 samples, 0.17%)</title><rect x="29.5434%" y="229" width="0.1711%" height="15" fill="rgb(249,83,47)" fg:x="871380900" fg:w="5045785"/><text x="29.7934%" y="239.50"></text></g><g><title>__handle_mm_fault (5,045,785 samples, 0.17%)</title><rect x="29.5434%" y="213" width="0.1711%" height="15" fill="rgb(215,43,3)" fg:x="871380900" fg:w="5045785"/><text x="29.7934%" y="223.50"></text></g><g><title>do_anonymous_page (5,045,785 samples, 0.17%)</title><rect x="29.5434%" y="197" width="0.1711%" height="15" fill="rgb(238,154,13)" fg:x="871380900" fg:w="5045785"/><text x="29.7934%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (68,690,200 samples, 2.33%)</title><rect x="27.5684%" y="357" width="2.3289%" height="15" fill="rgb(219,56,2)" fg:x="813128502" fg:w="68690200"/><text x="27.8184%" y="367.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (68,690,200 samples, 2.33%)</title><rect x="27.5684%" y="341" width="2.3289%" height="15" fill="rgb(233,0,4)" fg:x="813128502" fg:w="68690200"/><text x="27.8184%" y="351.50">a..</text></g><g><title>realloc (68,690,200 samples, 2.33%)</title><rect x="27.5684%" y="325" width="2.3289%" height="15" fill="rgb(235,30,7)" fg:x="813128502" fg:w="68690200"/><text x="27.8184%" y="335.50">r..</text></g><g><title>_int_realloc (68,690,200 samples, 2.33%)</title><rect x="27.5684%" y="309" width="2.3289%" height="15" fill="rgb(250,79,13)" fg:x="813128502" fg:w="68690200"/><text x="27.8184%" y="319.50">_..</text></g><g><title>_int_malloc (10,437,802 samples, 0.35%)</title><rect x="29.5434%" y="293" width="0.3539%" height="15" fill="rgb(211,146,34)" fg:x="871380900" fg:w="10437802"/><text x="29.7934%" y="303.50"></text></g><g><title>sysmalloc (5,392,017 samples, 0.18%)</title><rect x="29.7145%" y="277" width="0.1828%" height="15" fill="rgb(228,22,38)" fg:x="876426685" fg:w="5392017"/><text x="29.9645%" y="287.50"></text></g><g><title>__default_morecore@GLIBC_2.2.5 (5,392,017 samples, 0.18%)</title><rect x="29.7145%" y="261" width="0.1828%" height="15" fill="rgb(235,168,5)" fg:x="876426685" fg:w="5392017"/><text x="29.9645%" y="271.50"></text></g><g><title>__sbrk (5,392,017 samples, 0.18%)</title><rect x="29.7145%" y="245" width="0.1828%" height="15" fill="rgb(221,155,16)" fg:x="876426685" fg:w="5392017"/><text x="29.9645%" y="255.50"></text></g><g><title>__brk (5,392,017 samples, 0.18%)</title><rect x="29.7145%" y="229" width="0.1828%" height="15" fill="rgb(215,215,53)" fg:x="876426685" fg:w="5392017"/><text x="29.9645%" y="239.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5,392,017 samples, 0.18%)</title><rect x="29.7145%" y="213" width="0.1828%" height="15" fill="rgb(223,4,10)" fg:x="876426685" fg:w="5392017"/><text x="29.9645%" y="223.50"></text></g><g><title>do_syscall_64 (5,392,017 samples, 0.18%)</title><rect x="29.7145%" y="197" width="0.1828%" height="15" fill="rgb(234,103,6)" fg:x="876426685" fg:w="5392017"/><text x="29.9645%" y="207.50"></text></g><g><title>__do_sys_brk (5,392,017 samples, 0.18%)</title><rect x="29.7145%" y="181" width="0.1828%" height="15" fill="rgb(227,97,0)" fg:x="876426685" fg:w="5392017"/><text x="29.9645%" y="191.50"></text></g><g><title>mas_find (5,392,017 samples, 0.18%)</title><rect x="29.7145%" y="165" width="0.1828%" height="15" fill="rgb(234,150,53)" fg:x="876426685" fg:w="5392017"/><text x="29.9645%" y="175.50"></text></g><g><title>__fsnotify_parent (5,220,932 samples, 0.18%)</title><rect x="29.8973%" y="245" width="0.1770%" height="15" fill="rgb(228,201,54)" fg:x="881818702" fg:w="5220932"/><text x="30.1473%" y="255.50"></text></g><g><title>srso_alias_return_thunk (5,220,932 samples, 0.18%)</title><rect x="29.8973%" y="229" width="0.1770%" height="15" fill="rgb(222,22,37)" fg:x="881818702" fg:w="5220932"/><text x="30.1473%" y="239.50"></text></g><g><title>srso_alias_safe_ret (5,220,932 samples, 0.18%)</title><rect x="29.8973%" y="213" width="0.1770%" height="15" fill="rgb(237,53,32)" fg:x="881818702" fg:w="5220932"/><text x="30.1473%" y="223.50"></text></g><g><title>kmem_cache_free (5,432,776 samples, 0.18%)</title><rect x="30.0743%" y="245" width="0.1842%" height="15" fill="rgb(233,25,53)" fg:x="887039634" fg:w="5432776"/><text x="30.3243%" y="255.50"></text></g><g><title>__fput (16,095,606 samples, 0.55%)</title><rect x="29.8973%" y="261" width="0.5457%" height="15" fill="rgb(210,40,34)" fg:x="881818702" fg:w="16095606"/><text x="30.1473%" y="271.50"></text></g><g><title>srso_alias_return_thunk (5,441,898 samples, 0.18%)</title><rect x="30.2585%" y="245" width="0.1845%" height="15" fill="rgb(241,220,44)" fg:x="892472410" fg:w="5441898"/><text x="30.5085%" y="255.50"></text></g><g><title>srso_alias_safe_ret (5,441,898 samples, 0.18%)</title><rect x="30.2585%" y="229" width="0.1845%" height="15" fill="rgb(235,28,35)" fg:x="892472410" fg:w="5441898"/><text x="30.5085%" y="239.50"></text></g><g><title>filp_flush (5,910,653 samples, 0.20%)</title><rect x="30.4430%" y="261" width="0.2004%" height="15" fill="rgb(210,56,17)" fg:x="897914308" fg:w="5910653"/><text x="30.6930%" y="271.50"></text></g><g><title>dnotify_flush (5,413,241 samples, 0.18%)</title><rect x="30.4599%" y="245" width="0.1835%" height="15" fill="rgb(224,130,29)" fg:x="898411720" fg:w="5413241"/><text x="30.7099%" y="255.50"></text></g><g><title>fsnotify_find_mark (5,413,241 samples, 0.18%)</title><rect x="30.4599%" y="229" width="0.1835%" height="15" fill="rgb(235,212,8)" fg:x="898411720" fg:w="5413241"/><text x="30.7099%" y="239.50"></text></g><g><title>fsnotify_grab_connector (5,413,241 samples, 0.18%)</title><rect x="30.4599%" y="213" width="0.1835%" height="15" fill="rgb(223,33,50)" fg:x="898411720" fg:w="5413241"/><text x="30.7099%" y="223.50"></text></g><g><title>_raw_spin_lock (5,413,241 samples, 0.18%)</title><rect x="30.4599%" y="197" width="0.1835%" height="15" fill="rgb(219,149,13)" fg:x="898411720" fg:w="5413241"/><text x="30.7099%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (27,392,750 samples, 0.93%)</title><rect x="29.8973%" y="357" width="0.9287%" height="15" fill="rgb(250,156,29)" fg:x="881818702" fg:w="27392750"/><text x="30.1473%" y="367.50"></text></g><g><title>&lt;std::sys::pal::unix::fs::Dir as core::ops::drop::Drop&gt;::drop (27,392,750 samples, 0.93%)</title><rect x="29.8973%" y="341" width="0.9287%" height="15" fill="rgb(216,193,19)" fg:x="881818702" fg:w="27392750"/><text x="30.1473%" y="351.50"></text></g><g><title>__close_nocancel (27,392,750 samples, 0.93%)</title><rect x="29.8973%" y="325" width="0.9287%" height="15" fill="rgb(216,135,14)" fg:x="881818702" fg:w="27392750"/><text x="30.1473%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27,392,750 samples, 0.93%)</title><rect x="29.8973%" y="309" width="0.9287%" height="15" fill="rgb(241,47,5)" fg:x="881818702" fg:w="27392750"/><text x="30.1473%" y="319.50"></text></g><g><title>do_syscall_64 (27,392,750 samples, 0.93%)</title><rect x="29.8973%" y="293" width="0.9287%" height="15" fill="rgb(233,42,35)" fg:x="881818702" fg:w="27392750"/><text x="30.1473%" y="303.50"></text></g><g><title>__x64_sys_close (27,392,750 samples, 0.93%)</title><rect x="29.8973%" y="277" width="0.9287%" height="15" fill="rgb(231,13,6)" fg:x="881818702" fg:w="27392750"/><text x="30.1473%" y="287.50"></text></g><g><title>kmem_cache_free (5,386,491 samples, 0.18%)</title><rect x="30.6434%" y="261" width="0.1826%" height="15" fill="rgb(207,181,40)" fg:x="903824961" fg:w="5386491"/><text x="30.8934%" y="271.50"></text></g><g><title>__memcg_slab_free_hook (5,386,491 samples, 0.18%)</title><rect x="30.6434%" y="245" width="0.1826%" height="15" fill="rgb(254,173,49)" fg:x="903824961" fg:w="5386491"/><text x="30.8934%" y="255.50"></text></g><g><title>refill_obj_stock (5,386,491 samples, 0.18%)</title><rect x="30.6434%" y="229" width="0.1826%" height="15" fill="rgb(221,1,38)" fg:x="903824961" fg:w="5386491"/><text x="30.8934%" y="239.50"></text></g><g><title>__pkru_allows_pkey (5,440,990 samples, 0.18%)</title><rect x="30.8260%" y="309" width="0.1845%" height="15" fill="rgb(206,124,46)" fg:x="909211452" fg:w="5440990"/><text x="31.0760%" y="319.50"></text></g><g><title>__folio_batch_add_and_move (4,855,749 samples, 0.16%)</title><rect x="31.0105%" y="261" width="0.1646%" height="15" fill="rgb(249,21,11)" fg:x="914652442" fg:w="4855749"/><text x="31.2605%" y="271.50"></text></g><g><title>folio_batch_move_lru (4,855,749 samples, 0.16%)</title><rect x="31.0105%" y="245" width="0.1646%" height="15" fill="rgb(222,201,40)" fg:x="914652442" fg:w="4855749"/><text x="31.2605%" y="255.50"></text></g><g><title>lru_add (4,855,749 samples, 0.16%)</title><rect x="31.0105%" y="229" width="0.1646%" height="15" fill="rgb(235,61,29)" fg:x="914652442" fg:w="4855749"/><text x="31.2605%" y="239.50"></text></g><g><title>__pte_offset_map_lock (5,448,191 samples, 0.18%)</title><rect x="31.1751%" y="261" width="0.1847%" height="15" fill="rgb(219,207,3)" fg:x="919508191" fg:w="5448191"/><text x="31.4251%" y="271.50"></text></g><g><title>__mem_cgroup_charge (5,441,195 samples, 0.18%)</title><rect x="31.3599%" y="245" width="0.1845%" height="15" fill="rgb(222,56,46)" fg:x="924956382" fg:w="5441195"/><text x="31.6099%" y="255.50"></text></g><g><title>charge_memcg (5,441,195 samples, 0.18%)</title><rect x="31.3599%" y="229" width="0.1845%" height="15" fill="rgb(239,76,54)" fg:x="924956382" fg:w="5441195"/><text x="31.6099%" y="239.50"></text></g><g><title>memcg1_commit_charge (5,441,195 samples, 0.18%)</title><rect x="31.3599%" y="213" width="0.1845%" height="15" fill="rgb(231,124,27)" fg:x="924956382" fg:w="5441195"/><text x="31.6099%" y="223.50"></text></g><g><title>memcg1_check_events (5,441,195 samples, 0.18%)</title><rect x="31.3599%" y="197" width="0.1845%" height="15" fill="rgb(249,195,6)" fg:x="924956382" fg:w="5441195"/><text x="31.6099%" y="207.50"></text></g><g><title>__mem_cgroup_threshold (5,441,195 samples, 0.18%)</title><rect x="31.3599%" y="181" width="0.1845%" height="15" fill="rgb(237,174,47)" fg:x="924956382" fg:w="5441195"/><text x="31.6099%" y="191.50"></text></g><g><title>handle_mm_fault (32,281,412 samples, 1.09%)</title><rect x="31.0105%" y="309" width="1.0945%" height="15" fill="rgb(206,201,31)" fg:x="914652442" fg:w="32281412"/><text x="31.2605%" y="319.50"></text></g><g><title>__handle_mm_fault (32,281,412 samples, 1.09%)</title><rect x="31.0105%" y="293" width="1.0945%" height="15" fill="rgb(231,57,52)" fg:x="914652442" fg:w="32281412"/><text x="31.2605%" y="303.50"></text></g><g><title>do_anonymous_page (32,281,412 samples, 1.09%)</title><rect x="31.0105%" y="277" width="1.0945%" height="15" fill="rgb(248,177,22)" fg:x="914652442" fg:w="32281412"/><text x="31.2605%" y="287.50"></text></g><g><title>alloc_anon_folio (21,977,472 samples, 0.75%)</title><rect x="31.3599%" y="261" width="0.7451%" height="15" fill="rgb(215,211,37)" fg:x="924956382" fg:w="21977472"/><text x="31.6099%" y="271.50"></text></g><g><title>vma_alloc_folio_noprof (16,536,277 samples, 0.56%)</title><rect x="31.5443%" y="245" width="0.5606%" height="15" fill="rgb(241,128,51)" fg:x="930397577" fg:w="16536277"/><text x="31.7943%" y="255.50"></text></g><g><title>folio_alloc_mpol_noprof (16,536,277 samples, 0.56%)</title><rect x="31.5443%" y="229" width="0.5606%" height="15" fill="rgb(227,165,31)" fg:x="930397577" fg:w="16536277"/><text x="31.7943%" y="239.50"></text></g><g><title>alloc_pages_mpol (16,536,277 samples, 0.56%)</title><rect x="31.5443%" y="213" width="0.5606%" height="15" fill="rgb(228,167,24)" fg:x="930397577" fg:w="16536277"/><text x="31.7943%" y="223.50"></text></g><g><title>__alloc_frozen_pages_noprof (16,536,277 samples, 0.56%)</title><rect x="31.5443%" y="197" width="0.5606%" height="15" fill="rgb(228,143,12)" fg:x="930397577" fg:w="16536277"/><text x="31.7943%" y="207.50"></text></g><g><title>get_page_from_freelist (11,102,534 samples, 0.38%)</title><rect x="31.7286%" y="181" width="0.3764%" height="15" fill="rgb(249,149,8)" fg:x="935831320" fg:w="11102534"/><text x="31.9786%" y="191.50"></text></g><g><title>post_alloc_hook (11,102,534 samples, 0.38%)</title><rect x="31.7286%" y="165" width="0.3764%" height="15" fill="rgb(243,35,44)" fg:x="935831320" fg:w="11102534"/><text x="31.9786%" y="175.50"></text></g><g><title>clear_page_erms (11,102,534 samples, 0.38%)</title><rect x="31.7286%" y="149" width="0.3764%" height="15" fill="rgb(246,89,9)" fg:x="935831320" fg:w="11102534"/><text x="31.9786%" y="159.50"></text></g><g><title>asm_exc_page_fault (43,162,402 samples, 1.46%)</title><rect x="30.8260%" y="357" width="1.4634%" height="15" fill="rgb(233,213,13)" fg:x="909211452" fg:w="43162402"/><text x="31.0760%" y="367.50"></text></g><g><title>exc_page_fault (43,162,402 samples, 1.46%)</title><rect x="30.8260%" y="341" width="1.4634%" height="15" fill="rgb(233,141,41)" fg:x="909211452" fg:w="43162402"/><text x="31.0760%" y="351.50"></text></g><g><title>do_user_addr_fault (43,162,402 samples, 1.46%)</title><rect x="30.8260%" y="325" width="1.4634%" height="15" fill="rgb(239,167,4)" fg:x="909211452" fg:w="43162402"/><text x="31.0760%" y="335.50"></text></g><g><title>lock_vma_under_rcu (5,440,000 samples, 0.18%)</title><rect x="32.1050%" y="309" width="0.1844%" height="15" fill="rgb(209,217,16)" fg:x="946933854" fg:w="5440000"/><text x="32.3550%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (10,864,593 samples, 0.37%)</title><rect x="32.2894%" y="357" width="0.3684%" height="15" fill="rgb(219,88,35)" fg:x="952374305" fg:w="10864593"/><text x="32.5394%" y="367.50"></text></g><g><title>std::sys::pal::unix::fs::stat (10,864,593 samples, 0.37%)</title><rect x="32.2894%" y="341" width="0.3684%" height="15" fill="rgb(220,193,23)" fg:x="952374305" fg:w="10864593"/><text x="32.5394%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (75,084,073 samples, 2.55%)</title><rect x="32.6578%" y="357" width="2.5457%" height="15" fill="rgb(230,90,52)" fg:x="963238898" fg:w="75084073"/><text x="32.9078%" y="367.50">co..</text></g><g><title>_int_malloc (5,444,278 samples, 0.18%)</title><rect x="35.2035%" y="341" width="0.1846%" height="15" fill="rgb(252,106,19)" fg:x="1038322971" fg:w="5444278"/><text x="35.4535%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (5,312,298 samples, 0.18%)</title><rect x="35.3880%" y="341" width="0.1801%" height="15" fill="rgb(206,74,20)" fg:x="1043767249" fg:w="5312298"/><text x="35.6380%" y="351.50"></text></g><g><title>_int_malloc (4,834,078 samples, 0.16%)</title><rect x="35.5682%" y="309" width="0.1639%" height="15" fill="rgb(230,138,44)" fg:x="1049079547" fg:w="4834078"/><text x="35.8182%" y="319.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (4,996,443 samples, 0.17%)</title><rect x="35.7320%" y="293" width="0.1694%" height="15" fill="rgb(235,182,43)" fg:x="1053913625" fg:w="4996443"/><text x="35.9820%" y="303.50"></text></g><g><title>&lt;std::sys::pal::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (5,442,518 samples, 0.18%)</title><rect x="35.9014%" y="293" width="0.1845%" height="15" fill="rgb(242,16,51)" fg:x="1058910068" fg:w="5442518"/><text x="36.1514%" y="303.50"></text></g><g><title>std::fs::DirEntry::path (36,875,075 samples, 1.25%)</title><rect x="35.2035%" y="357" width="1.2502%" height="15" fill="rgb(248,9,4)" fg:x="1038322971" fg:w="36875075"/><text x="35.4535%" y="367.50"></text></g><g><title>std::path::Path::_join (26,118,499 samples, 0.89%)</title><rect x="35.5682%" y="341" width="0.8855%" height="15" fill="rgb(210,31,22)" fg:x="1049079547" fg:w="26118499"/><text x="35.8182%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (26,118,499 samples, 0.89%)</title><rect x="35.5682%" y="325" width="0.8855%" height="15" fill="rgb(239,54,39)" fg:x="1049079547" fg:w="26118499"/><text x="35.8182%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (21,284,421 samples, 0.72%)</title><rect x="35.7320%" y="309" width="0.7216%" height="15" fill="rgb(230,99,41)" fg:x="1053913625" fg:w="21284421"/><text x="35.9820%" y="319.50"></text></g><g><title>_int_malloc (10,845,460 samples, 0.37%)</title><rect x="36.0860%" y="293" width="0.3677%" height="15" fill="rgb(253,106,12)" fg:x="1064352586" fg:w="10845460"/><text x="36.3360%" y="303.50"></text></g><g><title>__memmove_avx512_unaligned_erms (5,430,432 samples, 0.18%)</title><rect x="36.4537%" y="325" width="0.1841%" height="15" fill="rgb(213,46,41)" fg:x="1075198046" fg:w="5430432"/><text x="36.7037%" y="335.50"></text></g><g><title>cfree@GLIBC_2.2.5 (10,691,099 samples, 0.36%)</title><rect x="36.6378%" y="325" width="0.3625%" height="15" fill="rgb(215,133,35)" fg:x="1080628478" fg:w="10691099"/><text x="36.8878%" y="335.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (5,437,826 samples, 0.18%)</title><rect x="37.0003%" y="325" width="0.1844%" height="15" fill="rgb(213,28,5)" fg:x="1091319577" fg:w="5437826"/><text x="37.2503%" y="335.50"></text></g><g><title>entry_SYSCALL_64 (5,437,826 samples, 0.18%)</title><rect x="37.0003%" y="309" width="0.1844%" height="15" fill="rgb(215,77,49)" fg:x="1091319577" fg:w="5437826"/><text x="37.2503%" y="319.50"></text></g><g><title>_copy_to_user (16,013,744 samples, 0.54%)</title><rect x="38.4677%" y="213" width="0.5429%" height="15" fill="rgb(248,100,22)" fg:x="1134602794" fg:w="16013744"/><text x="38.7177%" y="223.50"></text></g><g><title>cp_statx (41,282,262 samples, 1.40%)</title><rect x="37.7956%" y="229" width="1.3996%" height="15" fill="rgb(208,67,9)" fg:x="1114776462" fg:w="41282262"/><text x="38.0456%" y="239.50"></text></g><g><title>srso_alias_return_thunk (5,442,186 samples, 0.18%)</title><rect x="39.0107%" y="213" width="0.1845%" height="15" fill="rgb(219,133,21)" fg:x="1150616538" fg:w="5442186"/><text x="39.2607%" y="223.50"></text></g><g><title>srso_alias_safe_ret (5,442,186 samples, 0.18%)</title><rect x="39.0107%" y="197" width="0.1845%" height="15" fill="rgb(246,46,29)" fg:x="1150616538" fg:w="5442186"/><text x="39.2607%" y="207.50"></text></g><g><title>_raw_spin_lock (5,666,488 samples, 0.19%)</title><rect x="43.8808%" y="197" width="0.1921%" height="15" fill="rgb(246,185,52)" fg:x="1294259770" fg:w="5666488"/><text x="44.1308%" y="207.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (8,819,561 samples, 0.30%)</title><rect x="44.0729%" y="197" width="0.2990%" height="15" fill="rgb(252,136,11)" fg:x="1299926258" fg:w="8819561"/><text x="44.3229%" y="207.50"></text></g><g><title>sysvec_apic_timer_interrupt (8,819,561 samples, 0.30%)</title><rect x="44.0729%" y="181" width="0.2990%" height="15" fill="rgb(219,138,53)" fg:x="1299926258" fg:w="8819561"/><text x="44.3229%" y="191.50"></text></g><g><title>__sysvec_apic_timer_interrupt (8,819,561 samples, 0.30%)</title><rect x="44.0729%" y="165" width="0.2990%" height="15" fill="rgb(211,51,23)" fg:x="1299926258" fg:w="8819561"/><text x="44.3229%" y="175.50"></text></g><g><title>hrtimer_interrupt (8,819,561 samples, 0.30%)</title><rect x="44.0729%" y="149" width="0.2990%" height="15" fill="rgb(247,221,28)" fg:x="1299926258" fg:w="8819561"/><text x="44.3229%" y="159.50"></text></g><g><title>__hrtimer_run_queues (8,819,561 samples, 0.30%)</title><rect x="44.0729%" y="133" width="0.2990%" height="15" fill="rgb(251,222,45)" fg:x="1299926258" fg:w="8819561"/><text x="44.3229%" y="143.50"></text></g><g><title>tick_nohz_handler (8,819,561 samples, 0.30%)</title><rect x="44.0729%" y="117" width="0.2990%" height="15" fill="rgb(217,162,53)" fg:x="1299926258" fg:w="8819561"/><text x="44.3229%" y="127.50"></text></g><g><title>update_process_times (8,819,561 samples, 0.30%)</title><rect x="44.0729%" y="101" width="0.2990%" height="15" fill="rgb(229,93,14)" fg:x="1299926258" fg:w="8819561"/><text x="44.3229%" y="111.50"></text></g><g><title>sched_tick (8,819,561 samples, 0.30%)</title><rect x="44.0729%" y="85" width="0.2990%" height="15" fill="rgb(209,67,49)" fg:x="1299926258" fg:w="8819561"/><text x="44.3229%" y="95.50"></text></g><g><title>psi_account_irqtime (8,819,561 samples, 0.30%)</title><rect x="44.0729%" y="69" width="0.2990%" height="15" fill="rgb(213,87,29)" fg:x="1299926258" fg:w="8819561"/><text x="44.3229%" y="79.50"></text></g><g><title>sched_clock_cpu (8,819,561 samples, 0.30%)</title><rect x="44.0729%" y="53" width="0.2990%" height="15" fill="rgb(205,151,52)" fg:x="1299926258" fg:w="8819561"/><text x="44.3229%" y="63.50"></text></g><g><title>generic_fillattr (5,425,230 samples, 0.18%)</title><rect x="44.3719%" y="197" width="0.1839%" height="15" fill="rgb(253,215,39)" fg:x="1308745819" fg:w="5425230"/><text x="44.6219%" y="207.50"></text></g><g><title>btrfs_getattr (152,690,454 samples, 5.18%)</title><rect x="39.7464%" y="213" width="5.1768%" height="15" fill="rgb(221,220,41)" fg:x="1172317760" fg:w="152690454"/><text x="39.9964%" y="223.50">btrfs_..</text></g><g><title>inode_get_bytes (10,837,165 samples, 0.37%)</title><rect x="44.5559%" y="197" width="0.3674%" height="15" fill="rgb(218,133,21)" fg:x="1314171049" fg:w="10837165"/><text x="44.8059%" y="207.50"></text></g><g><title>_raw_spin_lock (5,418,623 samples, 0.18%)</title><rect x="44.7396%" y="181" width="0.1837%" height="15" fill="rgb(221,193,43)" fg:x="1319589591" fg:w="5418623"/><text x="44.9896%" y="191.50"></text></g><g><title>__legitimize_mnt (47,441,961 samples, 1.61%)</title><rect x="45.8301%" y="133" width="1.6085%" height="15" fill="rgb(240,128,52)" fg:x="1351755234" fg:w="47441961"/><text x="46.0801%" y="143.50"></text></g><g><title>complete_walk (68,451,911 samples, 2.32%)</title><rect x="45.8301%" y="181" width="2.3208%" height="15" fill="rgb(253,114,12)" fg:x="1351755234" fg:w="68451911"/><text x="46.0801%" y="191.50">c..</text></g><g><title>try_to_unlazy (68,451,911 samples, 2.32%)</title><rect x="45.8301%" y="165" width="2.3208%" height="15" fill="rgb(215,223,47)" fg:x="1351755234" fg:w="68451911"/><text x="46.0801%" y="175.50">t..</text></g><g><title>__legitimize_path (68,451,911 samples, 2.32%)</title><rect x="45.8301%" y="149" width="2.3208%" height="15" fill="rgb(248,225,23)" fg:x="1351755234" fg:w="68451911"/><text x="46.0801%" y="159.50">_..</text></g><g><title>lockref_get_not_dead (21,009,950 samples, 0.71%)</title><rect x="47.4386%" y="133" width="0.7123%" height="15" fill="rgb(250,108,0)" fg:x="1399197195" fg:w="21009950"/><text x="47.6886%" y="143.50"></text></g><g><title>hash_name (32,473,530 samples, 1.10%)</title><rect x="50.4194%" y="165" width="1.1010%" height="15" fill="rgb(228,208,7)" fg:x="1487115501" fg:w="32473530"/><text x="50.6694%" y="175.50"></text></g><g><title>btrfs_permission (10,876,663 samples, 0.37%)</title><rect x="52.0420%" y="149" width="0.3688%" height="15" fill="rgb(244,45,10)" fg:x="1534973996" fg:w="10876663"/><text x="52.2920%" y="159.50"></text></g><g><title>inode_permission (48,919,886 samples, 1.66%)</title><rect x="51.5204%" y="165" width="1.6586%" height="15" fill="rgb(207,125,25)" fg:x="1519589031" fg:w="48919886"/><text x="51.7704%" y="175.50"></text></g><g><title>generic_permission (22,658,258 samples, 0.77%)</title><rect x="52.4108%" y="149" width="0.7682%" height="15" fill="rgb(210,195,18)" fg:x="1545850659" fg:w="22658258"/><text x="52.6608%" y="159.50"></text></g><g><title>__inode_security_revalidate (15,961,245 samples, 0.54%)</title><rect x="56.8089%" y="133" width="0.5412%" height="15" fill="rgb(249,80,12)" fg:x="1675572920" fg:w="15961245"/><text x="57.0589%" y="143.50"></text></g><g><title>__rcu_read_unlock (4,959,061 samples, 0.17%)</title><rect x="58.6314%" y="117" width="0.1681%" height="15" fill="rgb(221,65,9)" fg:x="1729327116" fg:w="4959061"/><text x="58.8814%" y="127.50"></text></g><g><title>security_inode_permission (171,213,011 samples, 5.80%)</title><rect x="53.1790%" y="165" width="5.8048%" height="15" fill="rgb(235,49,36)" fg:x="1568508917" fg:w="171213011"/><text x="53.4290%" y="175.50">securit..</text></g><g><title>selinux_inode_permission (154,909,939 samples, 5.25%)</title><rect x="53.7317%" y="149" width="5.2521%" height="15" fill="rgb(225,32,20)" fg:x="1584811989" fg:w="154909939"/><text x="53.9817%" y="159.50">selinu..</text></g><g><title>avc_has_perm_noaudit (48,187,763 samples, 1.63%)</title><rect x="57.3500%" y="133" width="1.6338%" height="15" fill="rgb(215,141,46)" fg:x="1691534165" fg:w="48187763"/><text x="57.6000%" y="143.50"></text></g><g><title>avc_lookup (5,435,751 samples, 0.18%)</title><rect x="58.7995%" y="117" width="0.1843%" height="15" fill="rgb(250,160,47)" fg:x="1734286177" fg:w="5435751"/><text x="59.0495%" y="127.50"></text></g><g><title>step_into (5,189,855 samples, 0.18%)</title><rect x="58.9838%" y="165" width="0.1760%" height="15" fill="rgb(216,222,40)" fg:x="1739721928" fg:w="5189855"/><text x="59.2338%" y="175.50"></text></g><g><title>__d_lookup_rcu (44,056,452 samples, 1.49%)</title><rect x="60.6184%" y="133" width="1.4937%" height="15" fill="rgb(234,217,39)" fg:x="1787933770" fg:w="44056452"/><text x="60.8684%" y="143.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (426,379,451 samples, 14.46%)</title><rect x="48.1509%" y="181" width="14.4560%" height="15" fill="rgb(207,178,40)" fg:x="1420207145" fg:w="426379451"/><text x="48.4009%" y="191.50">link_path_walk.part.0...</text></g><g><title>walk_component (101,674,813 samples, 3.45%)</title><rect x="59.1598%" y="165" width="3.4472%" height="15" fill="rgb(221,136,13)" fg:x="1744911783" fg:w="101674813"/><text x="59.4098%" y="175.50">wal..</text></g><g><title>lookup_fast (69,535,872 samples, 2.36%)</title><rect x="60.2494%" y="149" width="2.3576%" height="15" fill="rgb(249,199,10)" fg:x="1777050724" fg:w="69535872"/><text x="60.4994%" y="159.50">l..</text></g><g><title>srso_alias_return_thunk (14,596,374 samples, 0.49%)</title><rect x="62.1121%" y="133" width="0.4949%" height="15" fill="rgb(249,222,13)" fg:x="1831990222" fg:w="14596374"/><text x="62.3621%" y="143.50"></text></g><g><title>srso_alias_safe_ret (14,596,374 samples, 0.49%)</title><rect x="62.1121%" y="117" width="0.4949%" height="15" fill="rgb(244,185,38)" fg:x="1831990222" fg:w="14596374"/><text x="62.3621%" y="127.50"></text></g><g><title>terminate_walk (30,857,230 samples, 1.05%)</title><rect x="62.6070%" y="181" width="1.0462%" height="15" fill="rgb(236,202,9)" fg:x="1846586596" fg:w="30857230"/><text x="62.8570%" y="191.50"></text></g><g><title>path_lookupat (557,527,598 samples, 18.90%)</title><rect x="45.2919%" y="197" width="18.9025%" height="15" fill="rgb(250,229,37)" fg:x="1335881671" fg:w="557527598"/><text x="45.5419%" y="207.50">path_lookupat</text></g><g><title>walk_component (15,965,443 samples, 0.54%)</title><rect x="63.6531%" y="181" width="0.5413%" height="15" fill="rgb(206,174,23)" fg:x="1877443826" fg:w="15965443"/><text x="63.9031%" y="191.50"></text></g><g><title>lookup_fast (15,965,443 samples, 0.54%)</title><rect x="63.6531%" y="165" width="0.5413%" height="15" fill="rgb(211,33,43)" fg:x="1877443826" fg:w="15965443"/><text x="63.9031%" y="175.50"></text></g><g><title>__d_lookup_rcu (15,965,443 samples, 0.54%)</title><rect x="63.6531%" y="149" width="0.5413%" height="15" fill="rgb(245,58,50)" fg:x="1877443826" fg:w="15965443"/><text x="63.9031%" y="159.50"></text></g><g><title>filename_lookup (573,714,201 samples, 19.45%)</title><rect x="44.9233%" y="213" width="19.4513%" height="15" fill="rgb(244,68,36)" fg:x="1325008214" fg:w="573714201"/><text x="45.1733%" y="223.50">filename_lookup</text></g><g><title>srso_alias_return_thunk (5,313,146 samples, 0.18%)</title><rect x="64.1944%" y="197" width="0.1801%" height="15" fill="rgb(232,229,15)" fg:x="1893409269" fg:w="5313146"/><text x="64.4444%" y="207.50"></text></g><g><title>srso_alias_safe_ret (5,313,146 samples, 0.18%)</title><rect x="64.1944%" y="181" width="0.1801%" height="15" fill="rgb(254,30,23)" fg:x="1893409269" fg:w="5313146"/><text x="64.4444%" y="191.50"></text></g><g><title>mntput (8,132,660 samples, 0.28%)</title><rect x="64.3746%" y="213" width="0.2757%" height="15" fill="rgb(235,160,14)" fg:x="1898722415" fg:w="8132660"/><text x="64.6246%" y="223.50"></text></g><g><title>_raw_spin_lock (8,121,458 samples, 0.28%)</title><rect x="65.7411%" y="181" width="0.2754%" height="15" fill="rgb(212,155,44)" fg:x="1939028280" fg:w="8121458"/><text x="65.9911%" y="191.50"></text></g><g><title>path_put (50,687,489 samples, 1.72%)</title><rect x="64.6503%" y="213" width="1.7185%" height="15" fill="rgb(226,2,50)" fg:x="1906855075" fg:w="50687489"/><text x="64.9003%" y="223.50"></text></g><g><title>dput (50,687,489 samples, 1.72%)</title><rect x="64.6503%" y="197" width="1.7185%" height="15" fill="rgb(234,177,6)" fg:x="1906855075" fg:w="50687489"/><text x="64.9003%" y="207.50"></text></g><g><title>lockref_put_return (10,392,826 samples, 0.35%)</title><rect x="66.0165%" y="181" width="0.3524%" height="15" fill="rgb(217,24,9)" fg:x="1947149738" fg:w="10392826"/><text x="66.2665%" y="191.50"></text></g><g><title>security_inode_getattr (63,736,432 samples, 2.16%)</title><rect x="66.3688%" y="213" width="2.1609%" height="15" fill="rgb(220,13,46)" fg:x="1957542564" fg:w="63736432"/><text x="66.6188%" y="223.50">s..</text></g><g><title>selinux_inode_getattr (21,171,161 samples, 0.72%)</title><rect x="67.8120%" y="197" width="0.7178%" height="15" fill="rgb(239,221,27)" fg:x="2000107835" fg:w="21171161"/><text x="68.0620%" y="207.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5,439,633 samples, 0.18%)</title><rect x="68.3453%" y="181" width="0.1844%" height="15" fill="rgb(222,198,25)" fg:x="2015839363" fg:w="5439633"/><text x="68.5953%" y="191.50"></text></g><g><title>sysvec_apic_timer_interrupt (5,439,633 samples, 0.18%)</title><rect x="68.3453%" y="165" width="0.1844%" height="15" fill="rgb(211,99,13)" fg:x="2015839363" fg:w="5439633"/><text x="68.5953%" y="175.50"></text></g><g><title>__sysvec_apic_timer_interrupt (5,439,633 samples, 0.18%)</title><rect x="68.3453%" y="149" width="0.1844%" height="15" fill="rgb(232,111,31)" fg:x="2015839363" fg:w="5439633"/><text x="68.5953%" y="159.50"></text></g><g><title>hrtimer_interrupt (5,439,633 samples, 0.18%)</title><rect x="68.3453%" y="133" width="0.1844%" height="15" fill="rgb(245,82,37)" fg:x="2015839363" fg:w="5439633"/><text x="68.5953%" y="143.50"></text></g><g><title>__hrtimer_run_queues (5,439,633 samples, 0.18%)</title><rect x="68.3453%" y="117" width="0.1844%" height="15" fill="rgb(227,149,46)" fg:x="2015839363" fg:w="5439633"/><text x="68.5953%" y="127.50"></text></g><g><title>tick_nohz_handler (5,439,633 samples, 0.18%)</title><rect x="68.3453%" y="101" width="0.1844%" height="15" fill="rgb(218,36,50)" fg:x="2015839363" fg:w="5439633"/><text x="68.5953%" y="111.50"></text></g><g><title>update_process_times (5,439,633 samples, 0.18%)</title><rect x="68.3453%" y="85" width="0.1844%" height="15" fill="rgb(226,80,48)" fg:x="2015839363" fg:w="5439633"/><text x="68.5953%" y="95.50"></text></g><g><title>sched_tick (5,439,633 samples, 0.18%)</title><rect x="68.3453%" y="69" width="0.1844%" height="15" fill="rgb(238,224,15)" fg:x="2015839363" fg:w="5439633"/><text x="68.5953%" y="79.50"></text></g><g><title>task_tick_fair (5,439,633 samples, 0.18%)</title><rect x="68.3453%" y="53" width="0.1844%" height="15" fill="rgb(241,136,10)" fg:x="2015839363" fg:w="5439633"/><text x="68.5953%" y="63.50"></text></g><g><title>update_load_avg (5,439,633 samples, 0.18%)</title><rect x="68.3453%" y="37" width="0.1844%" height="15" fill="rgb(208,32,45)" fg:x="2015839363" fg:w="5439633"/><text x="68.5953%" y="47.50"></text></g><g><title>do_statx (924,398,093 samples, 31.34%)</title><rect x="37.7956%" y="245" width="31.3409%" height="15" fill="rgb(207,135,9)" fg:x="1114776462" fg:w="924398093"/><text x="38.0456%" y="255.50">do_statx</text></g><g><title>vfs_statx (883,115,831 samples, 29.94%)</title><rect x="39.1952%" y="229" width="29.9413%" height="15" fill="rgb(206,86,44)" fg:x="1156058724" fg:w="883115831"/><text x="39.4452%" y="239.50">vfs_statx</text></g><g><title>vfs_getattr_nosec (17,895,559 samples, 0.61%)</title><rect x="68.5298%" y="213" width="0.6067%" height="15" fill="rgb(245,177,15)" fg:x="2021278996" fg:w="17895559"/><text x="68.7798%" y="223.50"></text></g><g><title>getname (5,550,143 samples, 0.19%)</title><rect x="69.1365%" y="245" width="0.1882%" height="15" fill="rgb(206,64,50)" fg:x="2039174555" fg:w="5550143"/><text x="69.3865%" y="255.50"></text></g><g><title>kmem_cache_alloc_noprof (26,614,287 samples, 0.90%)</title><rect x="69.3247%" y="229" width="0.9023%" height="15" fill="rgb(234,36,40)" fg:x="2044724698" fg:w="26614287"/><text x="69.5747%" y="239.50"></text></g><g><title>__memset (15,787,275 samples, 0.54%)</title><rect x="69.6917%" y="213" width="0.5353%" height="15" fill="rgb(213,64,8)" fg:x="2055551710" fg:w="15787275"/><text x="69.9417%" y="223.50"></text></g><g><title>__check_object_size.part.0 (15,653,211 samples, 0.53%)</title><rect x="70.9827%" y="213" width="0.5307%" height="15" fill="rgb(210,75,36)" fg:x="2093628890" fg:w="15653211"/><text x="71.2327%" y="223.50"></text></g><g><title>check_heap_object (4,793,980 samples, 0.16%)</title><rect x="71.3509%" y="197" width="0.1625%" height="15" fill="rgb(229,88,21)" fg:x="2104488121" fg:w="4793980"/><text x="71.6009%" y="207.50"></text></g><g><title>__virt_addr_valid (4,793,980 samples, 0.16%)</title><rect x="71.3509%" y="181" width="0.1625%" height="15" fill="rgb(252,204,47)" fg:x="2104488121" fg:w="4793980"/><text x="71.6009%" y="191.50"></text></g><g><title>getname_flags.part.0 (70,024,590 samples, 2.37%)</title><rect x="69.3247%" y="245" width="2.3741%" height="15" fill="rgb(208,77,27)" fg:x="2044724698" fg:w="70024590"/><text x="69.5747%" y="255.50">ge..</text></g><g><title>strncpy_from_user (43,410,303 samples, 1.47%)</title><rect x="70.2270%" y="229" width="1.4718%" height="15" fill="rgb(221,76,26)" fg:x="2071338985" fg:w="43410303"/><text x="70.4770%" y="239.50"></text></g><g><title>srso_alias_safe_ret (5,467,187 samples, 0.19%)</title><rect x="71.5134%" y="213" width="0.1854%" height="15" fill="rgb(225,139,18)" fg:x="2109282101" fg:w="5467187"/><text x="71.7634%" y="223.50"></text></g><g><title>__x64_sys_statx (1,010,136,952 samples, 34.25%)</title><rect x="37.7956%" y="261" width="34.2478%" height="15" fill="rgb(230,137,11)" fg:x="1114776462" fg:w="1010136952"/><text x="38.0456%" y="271.50">__x64_sys_statx</text></g><g><title>kmem_cache_free (10,164,126 samples, 0.34%)</title><rect x="71.6988%" y="245" width="0.3446%" height="15" fill="rgb(212,28,1)" fg:x="2114749288" fg:w="10164126"/><text x="71.9488%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,037,165,246 samples, 35.16%)</title><rect x="37.6128%" y="293" width="35.1642%" height="15" fill="rgb(248,164,17)" fg:x="1109387440" fg:w="1037165246"/><text x="37.8628%" y="303.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (1,037,165,246 samples, 35.16%)</title><rect x="37.6128%" y="277" width="35.1642%" height="15" fill="rgb(222,171,42)" fg:x="1109387440" fg:w="1037165246"/><text x="37.8628%" y="287.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (21,639,272 samples, 0.73%)</title><rect x="72.0434%" y="261" width="0.7337%" height="15" fill="rgb(243,84,45)" fg:x="2124913414" fg:w="21639272"/><text x="72.2934%" y="271.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (5,444,775 samples, 0.18%)</title><rect x="72.5924%" y="245" width="0.1846%" height="15" fill="rgb(252,49,23)" fg:x="2141107911" fg:w="5444775"/><text x="72.8424%" y="255.50"></text></g><g><title>std::path::Path::is_dir (1,076,762,778 samples, 36.51%)</title><rect x="36.4537%" y="357" width="36.5067%" height="15" fill="rgb(215,19,7)" fg:x="1075198046" fg:w="1076762778"/><text x="36.7037%" y="367.50">std::path::Path::is_dir</text></g><g><title>std::sys::pal::unix::fs::stat (1,076,762,778 samples, 36.51%)</title><rect x="36.4537%" y="341" width="36.5067%" height="15" fill="rgb(238,81,41)" fg:x="1075198046" fg:w="1076762778"/><text x="36.7037%" y="351.50">std::sys::pal::unix::fs::stat</text></g><g><title>std::sys::pal::unix::fs::try_statx (1,055,203,421 samples, 35.78%)</title><rect x="37.1846%" y="325" width="35.7758%" height="15" fill="rgb(210,199,37)" fg:x="1096757403" fg:w="1055203421"/><text x="37.4346%" y="335.50">std::sys::pal::unix::fs::try_statx</text></g><g><title>statx (1,048,017,625 samples, 35.53%)</title><rect x="37.4283%" y="309" width="35.5321%" height="15" fill="rgb(244,192,49)" fg:x="1103943199" fg:w="1048017625"/><text x="37.6783%" y="319.50">statx</text></g><g><title>syscall_return_via_sysret (5,408,138 samples, 0.18%)</title><rect x="72.7770%" y="293" width="0.1834%" height="15" fill="rgb(226,211,11)" fg:x="2146552686" fg:w="5408138"/><text x="73.0270%" y="303.50"></text></g><g><title>btrfs_opendir (5,443,166 samples, 0.18%)</title><rect x="73.1448%" y="165" width="0.1845%" height="15" fill="rgb(236,162,54)" fg:x="2157398828" fg:w="5443166"/><text x="73.3948%" y="175.50"></text></g><g><title>__kmalloc_cache_noprof (5,443,166 samples, 0.18%)</title><rect x="73.1448%" y="149" width="0.1845%" height="15" fill="rgb(220,229,9)" fg:x="2157398828" fg:w="5443166"/><text x="73.3948%" y="159.50"></text></g><g><title>__memset (5,443,166 samples, 0.18%)</title><rect x="73.1448%" y="133" width="0.1845%" height="15" fill="rgb(250,87,22)" fg:x="2157398828" fg:w="5443166"/><text x="73.3948%" y="143.50"></text></g><g><title>do_open (21,513,166 samples, 0.73%)</title><rect x="72.9604%" y="213" width="0.7294%" height="15" fill="rgb(239,43,17)" fg:x="2151960824" fg:w="21513166"/><text x="73.2104%" y="223.50"></text></g><g><title>vfs_open (21,513,166 samples, 0.73%)</title><rect x="72.9604%" y="197" width="0.7294%" height="15" fill="rgb(231,177,25)" fg:x="2151960824" fg:w="21513166"/><text x="73.2104%" y="207.50"></text></g><g><title>do_dentry_open (21,513,166 samples, 0.73%)</title><rect x="72.9604%" y="181" width="0.7294%" height="15" fill="rgb(219,179,1)" fg:x="2151960824" fg:w="21513166"/><text x="73.2104%" y="191.50"></text></g><g><title>security_file_open (10,631,996 samples, 0.36%)</title><rect x="73.3293%" y="165" width="0.3605%" height="15" fill="rgb(238,219,53)" fg:x="2162841994" fg:w="10631996"/><text x="73.5793%" y="175.50"></text></g><g><title>bpf_lsm_file_open (5,347,798 samples, 0.18%)</title><rect x="73.5085%" y="149" width="0.1813%" height="15" fill="rgb(232,167,36)" fg:x="2168126192" fg:w="5347798"/><text x="73.7585%" y="159.50"></text></g><g><title>bpf_trampoline_6442524493 (5,347,798 samples, 0.18%)</title><rect x="73.5085%" y="133" width="0.1813%" height="15" fill="rgb(244,19,51)" fg:x="2168126192" fg:w="5347798"/><text x="73.7585%" y="143.50"></text></g><g><title>__bpf_prog_enter (5,347,798 samples, 0.18%)</title><rect x="73.5085%" y="117" width="0.1813%" height="15" fill="rgb(224,6,22)" fg:x="2168126192" fg:w="5347798"/><text x="73.7585%" y="127.50"></text></g><g><title>do_filp_open (26,958,146 samples, 0.91%)</title><rect x="72.9604%" y="245" width="0.9140%" height="15" fill="rgb(224,145,5)" fg:x="2151960824" fg:w="26958146"/><text x="73.2104%" y="255.50"></text></g><g><title>path_openat (26,958,146 samples, 0.91%)</title><rect x="72.9604%" y="229" width="0.9140%" height="15" fill="rgb(234,130,49)" fg:x="2151960824" fg:w="26958146"/><text x="73.2104%" y="239.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (5,444,980 samples, 0.18%)</title><rect x="73.6898%" y="213" width="0.1846%" height="15" fill="rgb(254,6,2)" fg:x="2173473990" fg:w="5444980"/><text x="73.9398%" y="223.50"></text></g><g><title>security_inode_permission (5,444,980 samples, 0.18%)</title><rect x="73.6898%" y="197" width="0.1846%" height="15" fill="rgb(208,96,46)" fg:x="2173473990" fg:w="5444980"/><text x="73.9398%" y="207.50"></text></g><g><title>selinux_inode_permission (5,444,980 samples, 0.18%)</title><rect x="73.6898%" y="181" width="0.1846%" height="15" fill="rgb(239,3,39)" fg:x="2173473990" fg:w="5444980"/><text x="73.9398%" y="191.50"></text></g><g><title>kmem_cache_alloc_noprof (5,600,992 samples, 0.19%)</title><rect x="73.8744%" y="229" width="0.1899%" height="15" fill="rgb(233,210,1)" fg:x="2178918970" fg:w="5600992"/><text x="74.1244%" y="239.50"></text></g><g><title>__x64_sys_openat (38,396,430 samples, 1.30%)</title><rect x="72.9604%" y="277" width="1.3018%" height="15" fill="rgb(244,137,37)" fg:x="2151960824" fg:w="38396430"/><text x="73.2104%" y="287.50"></text></g><g><title>do_sys_openat2 (38,396,430 samples, 1.30%)</title><rect x="72.9604%" y="261" width="1.3018%" height="15" fill="rgb(240,136,2)" fg:x="2151960824" fg:w="38396430"/><text x="73.2104%" y="271.50"></text></g><g><title>getname_flags.part.0 (11,438,284 samples, 0.39%)</title><rect x="73.8744%" y="245" width="0.3878%" height="15" fill="rgb(239,18,37)" fg:x="2178918970" fg:w="11438284"/><text x="74.1244%" y="255.50"></text></g><g><title>strncpy_from_user (5,837,292 samples, 0.20%)</title><rect x="74.0643%" y="229" width="0.1979%" height="15" fill="rgb(218,185,22)" fg:x="2184519962" fg:w="5837292"/><text x="74.3143%" y="239.50"></text></g><g><title>__check_object_size.part.0 (5,837,292 samples, 0.20%)</title><rect x="74.0643%" y="213" width="0.1979%" height="15" fill="rgb(225,218,4)" fg:x="2184519962" fg:w="5837292"/><text x="74.3143%" y="223.50"></text></g><g><title>__opendir (43,838,226 samples, 1.49%)</title><rect x="72.9604%" y="341" width="1.4863%" height="15" fill="rgb(230,182,32)" fg:x="2151960824" fg:w="43838226"/><text x="73.2104%" y="351.50"></text></g><g><title>__open64_nocancel (43,838,226 samples, 1.49%)</title><rect x="72.9604%" y="325" width="1.4863%" height="15" fill="rgb(242,56,43)" fg:x="2151960824" fg:w="43838226"/><text x="73.2104%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (43,838,226 samples, 1.49%)</title><rect x="72.9604%" y="309" width="1.4863%" height="15" fill="rgb(233,99,24)" fg:x="2151960824" fg:w="43838226"/><text x="73.2104%" y="319.50"></text></g><g><title>do_syscall_64 (43,838,226 samples, 1.49%)</title><rect x="72.9604%" y="293" width="1.4863%" height="15" fill="rgb(234,209,42)" fg:x="2151960824" fg:w="43838226"/><text x="73.2104%" y="303.50"></text></g><g><title>syscall_exit_to_user_mode (5,441,796 samples, 0.18%)</title><rect x="74.2622%" y="277" width="0.1845%" height="15" fill="rgb(227,7,12)" fg:x="2190357254" fg:w="5441796"/><text x="74.5122%" y="287.50"></text></g><g><title>__alloc_dir (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="325" width="0.1846%" height="15" fill="rgb(245,203,43)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="335.50"></text></g><g><title>malloc (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="309" width="0.1846%" height="15" fill="rgb(238,205,33)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="319.50"></text></g><g><title>_int_malloc (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="293" width="0.1846%" height="15" fill="rgb(231,56,7)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="303.50"></text></g><g><title>asm_exc_page_fault (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="277" width="0.1846%" height="15" fill="rgb(244,186,29)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="287.50"></text></g><g><title>exc_page_fault (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="261" width="0.1846%" height="15" fill="rgb(234,111,31)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="271.50"></text></g><g><title>do_user_addr_fault (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="245" width="0.1846%" height="15" fill="rgb(241,149,10)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="255.50"></text></g><g><title>handle_mm_fault (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="229" width="0.1846%" height="15" fill="rgb(249,206,44)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="239.50"></text></g><g><title>__handle_mm_fault (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="213" width="0.1846%" height="15" fill="rgb(251,153,30)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="223.50"></text></g><g><title>do_anonymous_page (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="197" width="0.1846%" height="15" fill="rgb(239,152,38)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="207.50"></text></g><g><title>alloc_anon_folio (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="181" width="0.1846%" height="15" fill="rgb(249,139,47)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="191.50"></text></g><g><title>__mem_cgroup_charge (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="165" width="0.1846%" height="15" fill="rgb(244,64,35)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="175.50"></text></g><g><title>charge_memcg (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="149" width="0.1846%" height="15" fill="rgb(216,46,15)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="159.50"></text></g><g><title>try_charge_memcg (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="133" width="0.1846%" height="15" fill="rgb(250,74,19)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="143.50"></text></g><g><title>consume_stock (5,444,804 samples, 0.18%)</title><rect x="74.4467%" y="117" width="0.1846%" height="15" fill="rgb(249,42,33)" fg:x="2195799050" fg:w="5444804"/><text x="74.6967%" y="127.50"></text></g><g><title>btrfs_getattr (5,378,879 samples, 0.18%)</title><rect x="74.6313%" y="245" width="0.1824%" height="15" fill="rgb(242,149,17)" fg:x="2201243854" fg:w="5378879"/><text x="74.8813%" y="255.50"></text></g><g><title>inode_get_bytes (5,378,879 samples, 0.18%)</title><rect x="74.6313%" y="229" width="0.1824%" height="15" fill="rgb(244,29,21)" fg:x="2201243854" fg:w="5378879"/><text x="74.8813%" y="239.50"></text></g><g><title>_raw_spin_lock (5,378,879 samples, 0.18%)</title><rect x="74.6313%" y="213" width="0.1824%" height="15" fill="rgb(220,130,37)" fg:x="2201243854" fg:w="5378879"/><text x="74.8813%" y="223.50"></text></g><g><title>src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance::add_paths_from_dir (1,808,236,634 samples, 61.31%)</title><rect x="13.6907%" y="373" width="61.3067%" height="15" fill="rgb(211,67,2)" fg:x="403807071" fg:w="1808236634"/><text x="13.9407%" y="383.50">src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance::add_paths_from_dir</text></g><g><title>std::sys::pal::unix::fs::readdir (60,082,881 samples, 2.04%)</title><rect x="72.9604%" y="357" width="2.0371%" height="15" fill="rgb(235,68,52)" fg:x="2151960824" fg:w="60082881"/><text x="73.2104%" y="367.50">s..</text></g><g><title>opendir_tail (16,244,655 samples, 0.55%)</title><rect x="74.4467%" y="341" width="0.5508%" height="15" fill="rgb(246,142,3)" fg:x="2195799050" fg:w="16244655"/><text x="74.6967%" y="351.50"></text></g><g><title>__fstat64 (10,799,851 samples, 0.37%)</title><rect x="74.6313%" y="325" width="0.3662%" height="15" fill="rgb(241,25,7)" fg:x="2201243854" fg:w="10799851"/><text x="74.8813%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10,799,851 samples, 0.37%)</title><rect x="74.6313%" y="309" width="0.3662%" height="15" fill="rgb(242,119,39)" fg:x="2201243854" fg:w="10799851"/><text x="74.8813%" y="319.50"></text></g><g><title>do_syscall_64 (10,799,851 samples, 0.37%)</title><rect x="74.6313%" y="293" width="0.3662%" height="15" fill="rgb(241,98,45)" fg:x="2201243854" fg:w="10799851"/><text x="74.8813%" y="303.50"></text></g><g><title>__do_sys_newfstat (10,799,851 samples, 0.37%)</title><rect x="74.6313%" y="277" width="0.3662%" height="15" fill="rgb(254,28,30)" fg:x="2201243854" fg:w="10799851"/><text x="74.8813%" y="287.50"></text></g><g><title>vfs_fstat (10,799,851 samples, 0.37%)</title><rect x="74.6313%" y="261" width="0.3662%" height="15" fill="rgb(241,142,54)" fg:x="2201243854" fg:w="10799851"/><text x="74.8813%" y="271.50"></text></g><g><title>security_inode_getattr (5,420,972 samples, 0.18%)</title><rect x="74.8137%" y="245" width="0.1838%" height="15" fill="rgb(222,85,15)" fg:x="2206622733" fg:w="5420972"/><text x="75.0637%" y="255.50"></text></g><g><title>selinux_inode_getattr (5,420,972 samples, 0.18%)</title><rect x="74.8137%" y="229" width="0.1838%" height="15" fill="rgb(210,85,47)" fg:x="2206622733" fg:w="5420972"/><text x="75.0637%" y="239.50"></text></g><g><title>avc_has_perm (5,420,972 samples, 0.18%)</title><rect x="74.8137%" y="213" width="0.1838%" height="15" fill="rgb(224,206,25)" fg:x="2206622733" fg:w="5420972"/><text x="75.0637%" y="223.50"></text></g><g><title>avc_has_perm_noaudit (5,420,972 samples, 0.18%)</title><rect x="74.8137%" y="197" width="0.1838%" height="15" fill="rgb(243,201,19)" fg:x="2206622733" fg:w="5420972"/><text x="75.0637%" y="207.50"></text></g><g><title>std::fs::DirEntry::path (9,033,951 samples, 0.31%)</title><rect x="74.9975%" y="373" width="0.3063%" height="15" fill="rgb(236,59,4)" fg:x="2212043705" fg:w="9033951"/><text x="75.2475%" y="383.50"></text></g><g><title>std::path::Path::_join (9,033,951 samples, 0.31%)</title><rect x="74.9975%" y="357" width="0.3063%" height="15" fill="rgb(254,179,45)" fg:x="2212043705" fg:w="9033951"/><text x="75.2475%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (9,033,951 samples, 0.31%)</title><rect x="74.9975%" y="341" width="0.3063%" height="15" fill="rgb(226,14,10)" fg:x="2212043705" fg:w="9033951"/><text x="75.2475%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (9,033,951 samples, 0.31%)</title><rect x="74.9975%" y="325" width="0.3063%" height="15" fill="rgb(244,27,41)" fg:x="2212043705" fg:w="9033951"/><text x="75.2475%" y="335.50"></text></g><g><title>_int_malloc (9,033,951 samples, 0.31%)</title><rect x="74.9975%" y="309" width="0.3063%" height="15" fill="rgb(235,35,32)" fg:x="2212043705" fg:w="9033951"/><text x="75.2475%" y="319.50"></text></g><g><title>__memmove_avx512_unaligned_erms (5,324,357 samples, 0.18%)</title><rect x="75.3038%" y="341" width="0.1805%" height="15" fill="rgb(218,68,31)" fg:x="2221077656" fg:w="5324357"/><text x="75.5538%" y="351.50"></text></g><g><title>cp_statx (5,436,598 samples, 0.18%)</title><rect x="75.6687%" y="245" width="0.1843%" height="15" fill="rgb(207,120,37)" fg:x="2231841475" fg:w="5436598"/><text x="75.9187%" y="255.50"></text></g><g><title>btrfs_getattr (27,226,693 samples, 0.92%)</title><rect x="75.8530%" y="229" width="0.9231%" height="15" fill="rgb(227,98,0)" fg:x="2237278073" fg:w="27226693"/><text x="76.1030%" y="239.50"></text></g><g><title>complete_walk (10,466,299 samples, 0.35%)</title><rect x="76.7761%" y="197" width="0.3549%" height="15" fill="rgb(207,7,3)" fg:x="2264504766" fg:w="10466299"/><text x="77.0261%" y="207.50"></text></g><g><title>try_to_unlazy (10,466,299 samples, 0.35%)</title><rect x="76.7761%" y="181" width="0.3549%" height="15" fill="rgb(206,98,19)" fg:x="2264504766" fg:w="10466299"/><text x="77.0261%" y="191.50"></text></g><g><title>__legitimize_path (10,466,299 samples, 0.35%)</title><rect x="76.7761%" y="165" width="0.3549%" height="15" fill="rgb(217,5,26)" fg:x="2264504766" fg:w="10466299"/><text x="77.0261%" y="175.50"></text></g><g><title>__legitimize_mnt (10,466,299 samples, 0.35%)</title><rect x="76.7761%" y="149" width="0.3549%" height="15" fill="rgb(235,190,38)" fg:x="2264504766" fg:w="10466299"/><text x="77.0261%" y="159.50"></text></g><g><title>security_inode_permission (5,401,267 samples, 0.18%)</title><rect x="77.4794%" y="181" width="0.1831%" height="15" fill="rgb(247,86,24)" fg:x="2285249242" fg:w="5401267"/><text x="77.7294%" y="191.50"></text></g><g><title>selinux_inode_permission (5,401,267 samples, 0.18%)</title><rect x="77.4794%" y="165" width="0.1831%" height="15" fill="rgb(205,101,16)" fg:x="2285249242" fg:w="5401267"/><text x="77.7294%" y="175.50"></text></g><g><title>avc_has_perm_noaudit (5,401,267 samples, 0.18%)</title><rect x="77.4794%" y="149" width="0.1831%" height="15" fill="rgb(246,168,33)" fg:x="2285249242" fg:w="5401267"/><text x="77.7294%" y="159.50"></text></g><g><title>link_path_walk.part.0.constprop.0 (26,535,231 samples, 0.90%)</title><rect x="77.1310%" y="197" width="0.8997%" height="15" fill="rgb(231,114,1)" fg:x="2274971065" fg:w="26535231"/><text x="77.3810%" y="207.50"></text></g><g><title>walk_component (10,855,787 samples, 0.37%)</title><rect x="77.6626%" y="181" width="0.3681%" height="15" fill="rgb(207,184,53)" fg:x="2290650509" fg:w="10855787"/><text x="77.9126%" y="191.50"></text></g><g><title>lookup_fast (10,855,787 samples, 0.37%)</title><rect x="77.6626%" y="165" width="0.3681%" height="15" fill="rgb(224,95,51)" fg:x="2290650509" fg:w="10855787"/><text x="77.9126%" y="175.50"></text></g><g><title>__d_lookup_rcu (10,855,787 samples, 0.37%)</title><rect x="77.6626%" y="149" width="0.3681%" height="15" fill="rgb(212,188,45)" fg:x="2290650509" fg:w="10855787"/><text x="77.9126%" y="159.50"></text></g><g><title>filename_lookup (42,427,867 samples, 1.44%)</title><rect x="76.7761%" y="229" width="1.4385%" height="15" fill="rgb(223,154,38)" fg:x="2264504766" fg:w="42427867"/><text x="77.0261%" y="239.50"></text></g><g><title>path_lookupat (42,427,867 samples, 1.44%)</title><rect x="76.7761%" y="213" width="1.4385%" height="15" fill="rgb(251,22,52)" fg:x="2264504766" fg:w="42427867"/><text x="77.0261%" y="223.50"></text></g><g><title>walk_component (5,426,337 samples, 0.18%)</title><rect x="78.0306%" y="197" width="0.1840%" height="15" fill="rgb(229,209,22)" fg:x="2301506296" fg:w="5426337"/><text x="78.2806%" y="207.50"></text></g><g><title>lookup_fast (5,426,337 samples, 0.18%)</title><rect x="78.0306%" y="181" width="0.1840%" height="15" fill="rgb(234,138,34)" fg:x="2301506296" fg:w="5426337"/><text x="78.2806%" y="191.50"></text></g><g><title>__d_lookup_rcu (5,426,337 samples, 0.18%)</title><rect x="78.0306%" y="165" width="0.1840%" height="15" fill="rgb(212,95,11)" fg:x="2301506296" fg:w="5426337"/><text x="78.2806%" y="175.50"></text></g><g><title>mntput_no_expire (5,393,501 samples, 0.18%)</title><rect x="78.2146%" y="229" width="0.1829%" height="15" fill="rgb(240,179,47)" fg:x="2306932633" fg:w="5393501"/><text x="78.4646%" y="239.50"></text></g><g><title>path_put (5,427,194 samples, 0.18%)</title><rect x="78.3975%" y="229" width="0.1840%" height="15" fill="rgb(240,163,11)" fg:x="2312326134" fg:w="5427194"/><text x="78.6475%" y="239.50"></text></g><g><title>dput (5,427,194 samples, 0.18%)</title><rect x="78.3975%" y="213" width="0.1840%" height="15" fill="rgb(236,37,12)" fg:x="2312326134" fg:w="5427194"/><text x="78.6475%" y="223.50"></text></g><g><title>do_statx (91,223,308 samples, 3.09%)</title><rect x="75.6687%" y="261" width="3.0928%" height="15" fill="rgb(232,164,16)" fg:x="2231841475" fg:w="91223308"/><text x="75.9187%" y="271.50">do_..</text></g><g><title>vfs_statx (85,786,710 samples, 2.91%)</title><rect x="75.8530%" y="245" width="2.9085%" height="15" fill="rgb(244,205,15)" fg:x="2237278073" fg:w="85786710"/><text x="76.1030%" y="255.50">vf..</text></g><g><title>vfs_getattr_nosec (5,311,455 samples, 0.18%)</title><rect x="78.5815%" y="229" width="0.1801%" height="15" fill="rgb(223,117,47)" fg:x="2317753328" fg:w="5311455"/><text x="78.8315%" y="239.50"></text></g><g><title>src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance::add_paths_from_dir (1,984,710,073 samples, 67.29%)</title><rect x="11.6537%" y="389" width="67.2899%" height="15" fill="rgb(244,107,35)" fg:x="343724892" fg:w="1984710073"/><text x="11.9037%" y="399.50">src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance::add_paths_from_dir</text></g><g><title>std::path::Path::is_dir (107,357,309 samples, 3.64%)</title><rect x="75.3038%" y="373" width="3.6399%" height="15" fill="rgb(205,140,8)" fg:x="2221077656" fg:w="107357309"/><text x="75.5538%" y="383.50">std:..</text></g><g><title>std::sys::pal::unix::fs::stat (107,357,309 samples, 3.64%)</title><rect x="75.3038%" y="357" width="3.6399%" height="15" fill="rgb(228,84,46)" fg:x="2221077656" fg:w="107357309"/><text x="75.5538%" y="367.50">std:..</text></g><g><title>std::sys::pal::unix::fs::try_statx (102,032,952 samples, 3.46%)</title><rect x="75.4843%" y="341" width="3.4593%" height="15" fill="rgb(254,188,9)" fg:x="2226402013" fg:w="102032952"/><text x="75.7343%" y="351.50">std..</text></g><g><title>statx (102,032,952 samples, 3.46%)</title><rect x="75.4843%" y="325" width="3.4593%" height="15" fill="rgb(206,112,54)" fg:x="2226402013" fg:w="102032952"/><text x="75.7343%" y="335.50">sta..</text></g><g><title>entry_SYSCALL_64_after_hwframe (102,032,952 samples, 3.46%)</title><rect x="75.4843%" y="309" width="3.4593%" height="15" fill="rgb(216,84,49)" fg:x="2226402013" fg:w="102032952"/><text x="75.7343%" y="319.50">ent..</text></g><g><title>do_syscall_64 (102,032,952 samples, 3.46%)</title><rect x="75.4843%" y="293" width="3.4593%" height="15" fill="rgb(214,194,35)" fg:x="2226402013" fg:w="102032952"/><text x="75.7343%" y="303.50">do_..</text></g><g><title>__x64_sys_statx (102,032,952 samples, 3.46%)</title><rect x="75.4843%" y="277" width="3.4593%" height="15" fill="rgb(249,28,3)" fg:x="2226402013" fg:w="102032952"/><text x="75.7343%" y="287.50">__x..</text></g><g><title>kmem_cache_free (5,370,182 samples, 0.18%)</title><rect x="78.7615%" y="261" width="0.1821%" height="15" fill="rgb(222,56,52)" fg:x="2323064783" fg:w="5370182"/><text x="79.0115%" y="271.50"></text></g><g><title>btrfs_getattr (4,909,558 samples, 0.17%)</title><rect x="78.9436%" y="245" width="0.1665%" height="15" fill="rgb(245,217,50)" fg:x="2328434965" fg:w="4909558"/><text x="79.1936%" y="255.50"></text></g><g><title>complete_walk (5,434,688 samples, 0.18%)</title><rect x="79.1101%" y="213" width="0.1843%" height="15" fill="rgb(213,201,24)" fg:x="2333344523" fg:w="5434688"/><text x="79.3601%" y="223.50"></text></g><g><title>try_to_unlazy (5,434,688 samples, 0.18%)</title><rect x="79.1101%" y="197" width="0.1843%" height="15" fill="rgb(248,116,28)" fg:x="2333344523" fg:w="5434688"/><text x="79.3601%" y="207.50"></text></g><g><title>__legitimize_path (5,434,688 samples, 0.18%)</title><rect x="79.1101%" y="181" width="0.1843%" height="15" fill="rgb(219,72,43)" fg:x="2333344523" fg:w="5434688"/><text x="79.3601%" y="191.50"></text></g><g><title>__legitimize_mnt (5,434,688 samples, 0.18%)</title><rect x="79.1101%" y="165" width="0.1843%" height="15" fill="rgb(209,138,14)" fg:x="2333344523" fg:w="5434688"/><text x="79.3601%" y="175.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (2,194,027,009 samples, 74.39%)</title><rect x="5.0691%" y="581" width="74.3866%" height="15" fill="rgb(222,18,33)" fg:x="149513704" fg:w="2194027009"/><text x="5.3191%" y="591.50">__libc_start_main@@GLIBC_2.34</text></g><g><title>__libc_start_call_main (2,194,027,009 samples, 74.39%)</title><rect x="5.0691%" y="565" width="74.3866%" height="15" fill="rgb(213,199,7)" fg:x="149513704" fg:w="2194027009"/><text x="5.3191%" y="575.50">__libc_start_call_main</text></g><g><title>main (2,194,027,009 samples, 74.39%)</title><rect x="5.0691%" y="549" width="74.3866%" height="15" fill="rgb(250,110,10)" fg:x="149513704" fg:w="2194027009"/><text x="5.3191%" y="559.50">main</text></g><g><title>std::rt::lang_start_internal (2,194,027,009 samples, 74.39%)</title><rect x="5.0691%" y="533" width="74.3866%" height="15" fill="rgb(248,123,6)" fg:x="149513704" fg:w="2194027009"/><text x="5.3191%" y="543.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::{{closure}} (2,194,027,009 samples, 74.39%)</title><rect x="5.0691%" y="517" width="74.3866%" height="15" fill="rgb(206,91,31)" fg:x="149513704" fg:w="2194027009"/><text x="5.3191%" y="527.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (2,194,027,009 samples, 74.39%)</title><rect x="5.0691%" y="501" width="74.3866%" height="15" fill="rgb(211,154,13)" fg:x="149513704" fg:w="2194027009"/><text x="5.3191%" y="511.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>src_tauri::main (2,194,027,009 samples, 74.39%)</title><rect x="5.0691%" y="485" width="74.3866%" height="15" fill="rgb(225,148,7)" fg:x="149513704" fg:w="2194027009"/><text x="5.3191%" y="495.50">src_tauri::main</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (2,193,985,888 samples, 74.39%)</title><rect x="5.0705%" y="469" width="74.3852%" height="15" fill="rgb(220,160,43)" fg:x="149554825" fg:w="2193985888"/><text x="5.3205%" y="479.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (2,193,985,888 samples, 74.39%)</title><rect x="5.0705%" y="453" width="74.3852%" height="15" fill="rgb(213,52,39)" fg:x="149554825" fg:w="2193985888"/><text x="5.3205%" y="463.50">tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance (2,193,985,888 samples, 74.39%)</title><rect x="5.0705%" y="437" width="74.3852%" height="15" fill="rgb(243,137,7)" fg:x="149554825" fg:w="2193985888"/><text x="5.3205%" y="447.50">src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance</text></g><g><title>src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance::add_paths_from_dir (2,005,077,584 samples, 67.98%)</title><rect x="11.4753%" y="421" width="67.9805%" height="15" fill="rgb(230,79,13)" fg:x="338463129" fg:w="2005077584"/><text x="11.7253%" y="431.50">src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance::add_paths_from_dir</text></g><g><title>src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance::add_paths_from_dir (2,005,077,584 samples, 67.98%)</title><rect x="11.4753%" y="405" width="67.9805%" height="15" fill="rgb(247,105,23)" fg:x="338463129" fg:w="2005077584"/><text x="11.7253%" y="415.50">src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance::add_paths_from_dir</text></g><g><title>std::path::Path::is_dir (15,105,748 samples, 0.51%)</title><rect x="78.9436%" y="389" width="0.5121%" height="15" fill="rgb(223,179,41)" fg:x="2328434965" fg:w="15105748"/><text x="79.1936%" y="399.50"></text></g><g><title>std::sys::pal::unix::fs::stat (15,105,748 samples, 0.51%)</title><rect x="78.9436%" y="373" width="0.5121%" height="15" fill="rgb(218,9,34)" fg:x="2328434965" fg:w="15105748"/><text x="79.1936%" y="383.50"></text></g><g><title>std::sys::pal::unix::fs::try_statx (15,105,748 samples, 0.51%)</title><rect x="78.9436%" y="357" width="0.5121%" height="15" fill="rgb(222,106,8)" fg:x="2328434965" fg:w="15105748"/><text x="79.1936%" y="367.50"></text></g><g><title>statx (15,105,748 samples, 0.51%)</title><rect x="78.9436%" y="341" width="0.5121%" height="15" fill="rgb(211,220,0)" fg:x="2328434965" fg:w="15105748"/><text x="79.1936%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15,105,748 samples, 0.51%)</title><rect x="78.9436%" y="325" width="0.5121%" height="15" fill="rgb(229,52,16)" fg:x="2328434965" fg:w="15105748"/><text x="79.1936%" y="335.50"></text></g><g><title>do_syscall_64 (15,105,748 samples, 0.51%)</title><rect x="78.9436%" y="309" width="0.5121%" height="15" fill="rgb(212,155,18)" fg:x="2328434965" fg:w="15105748"/><text x="79.1936%" y="319.50"></text></g><g><title>__x64_sys_statx (15,105,748 samples, 0.51%)</title><rect x="78.9436%" y="293" width="0.5121%" height="15" fill="rgb(242,21,14)" fg:x="2328434965" fg:w="15105748"/><text x="79.1936%" y="303.50"></text></g><g><title>do_statx (15,105,748 samples, 0.51%)</title><rect x="78.9436%" y="277" width="0.5121%" height="15" fill="rgb(222,19,48)" fg:x="2328434965" fg:w="15105748"/><text x="79.1936%" y="287.50"></text></g><g><title>vfs_statx (15,105,748 samples, 0.51%)</title><rect x="78.9436%" y="261" width="0.5121%" height="15" fill="rgb(232,45,27)" fg:x="2328434965" fg:w="15105748"/><text x="79.1936%" y="271.50"></text></g><g><title>filename_lookup (10,196,190 samples, 0.35%)</title><rect x="79.1101%" y="245" width="0.3457%" height="15" fill="rgb(249,103,42)" fg:x="2333344523" fg:w="10196190"/><text x="79.3601%" y="255.50"></text></g><g><title>path_lookupat (10,196,190 samples, 0.35%)</title><rect x="79.1101%" y="229" width="0.3457%" height="15" fill="rgb(246,81,33)" fg:x="2333344523" fg:w="10196190"/><text x="79.3601%" y="239.50"></text></g><g><title>walk_component (4,761,502 samples, 0.16%)</title><rect x="79.2943%" y="213" width="0.1614%" height="15" fill="rgb(252,33,42)" fg:x="2338779211" fg:w="4761502"/><text x="79.5443%" y="223.50"></text></g><g><title>lookup_fast (4,761,502 samples, 0.16%)</title><rect x="79.2943%" y="197" width="0.1614%" height="15" fill="rgb(209,212,41)" fg:x="2338779211" fg:w="4761502"/><text x="79.5443%" y="207.50"></text></g><g><title>__d_lookup_rcu (4,761,502 samples, 0.16%)</title><rect x="79.2943%" y="181" width="0.1614%" height="15" fill="rgb(207,154,6)" fg:x="2338779211" fg:w="4761502"/><text x="79.5443%" y="191.50"></text></g><g><title>_start (2,194,352,052 samples, 74.40%)</title><rect x="5.0691%" y="597" width="74.3976%" height="15" fill="rgb(223,64,47)" fg:x="149513704" fg:w="2194352052"/><text x="5.3191%" y="607.50">_start</text></g><g><title>entry_SYSCALL_64_after_hwframe (325,043 samples, 0.01%)</title><rect x="79.4558%" y="581" width="0.0110%" height="15" fill="rgb(211,161,38)" fg:x="2343540713" fg:w="325043"/><text x="79.7058%" y="591.50"></text></g><g><title>do_syscall_64 (325,043 samples, 0.01%)</title><rect x="79.4558%" y="565" width="0.0110%" height="15" fill="rgb(219,138,40)" fg:x="2343540713" fg:w="325043"/><text x="79.7058%" y="575.50"></text></g><g><title>syscall_exit_to_user_mode (325,043 samples, 0.01%)</title><rect x="79.4558%" y="549" width="0.0110%" height="15" fill="rgb(241,228,46)" fg:x="2343540713" fg:w="325043"/><text x="79.7058%" y="559.50"></text></g><g><title>task_work_run (325,043 samples, 0.01%)</title><rect x="79.4558%" y="533" width="0.0110%" height="15" fill="rgb(223,209,38)" fg:x="2343540713" fg:w="325043"/><text x="79.7058%" y="543.50"></text></g><g><title>__fput (325,043 samples, 0.01%)</title><rect x="79.4558%" y="517" width="0.0110%" height="15" fill="rgb(236,164,45)" fg:x="2343540713" fg:w="325043"/><text x="79.7058%" y="527.50"></text></g><g><title>pipe_release (325,043 samples, 0.01%)</title><rect x="79.4558%" y="501" width="0.0110%" height="15" fill="rgb(231,15,5)" fg:x="2343540713" fg:w="325043"/><text x="79.7058%" y="511.50"></text></g><g><title>free_pipe_info (325,043 samples, 0.01%)</title><rect x="79.4558%" y="485" width="0.0110%" height="15" fill="rgb(252,35,15)" fg:x="2343540713" fg:w="325043"/><text x="79.7058%" y="495.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (20,821,819 samples, 0.71%)</title><rect x="79.4668%" y="597" width="0.7059%" height="15" fill="rgb(248,181,18)" fg:x="2343865756" fg:w="20821819"/><text x="79.7168%" y="607.50"></text></g><g><title>asm_exc_page_fault (21,480,338 samples, 0.73%)</title><rect x="80.1727%" y="597" width="0.7283%" height="15" fill="rgb(233,39,42)" fg:x="2364687575" fg:w="21480338"/><text x="80.4227%" y="607.50"></text></g><g><title>exc_page_fault (5,468,398 samples, 0.19%)</title><rect x="80.7156%" y="581" width="0.1854%" height="15" fill="rgb(238,110,33)" fg:x="2380699515" fg:w="5468398"/><text x="80.9656%" y="591.50"></text></g><g><title>irqentry_enter (5,432,534 samples, 0.18%)</title><rect x="80.7168%" y="565" width="0.1842%" height="15" fill="rgb(233,195,10)" fg:x="2380735379" fg:w="5432534"/><text x="80.9668%" y="575.50"></text></g><g><title>irqentry_enter_from_user_mode (5,432,534 samples, 0.18%)</title><rect x="80.7168%" y="549" width="0.1842%" height="15" fill="rgb(254,105,3)" fg:x="2380735379" fg:w="5432534"/><text x="80.9668%" y="559.50"></text></g><g><title>cfree@GLIBC_2.2.5 (10,763,943 samples, 0.36%)</title><rect x="80.9010%" y="597" width="0.3649%" height="15" fill="rgb(221,225,9)" fg:x="2386167913" fg:w="10763943"/><text x="81.1510%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (396,684,138 samples, 13.45%)</title><rect x="81.2659%" y="597" width="13.4492%" height="15" fill="rgb(224,227,45)" fg:x="2396931856" fg:w="396684138"/><text x="81.5159%" y="607.50">core::hash::BuildHas..</text></g><g><title>core::slice::memchr::memchr_aligned (20,647,218 samples, 0.70%)</title><rect x="94.7152%" y="597" width="0.7000%" height="15" fill="rgb(229,198,43)" fg:x="2793615994" fg:w="20647218"/><text x="94.9652%" y="607.50"></text></g><g><title>__x64_sys_statx (5,434,055 samples, 0.18%)</title><rect x="95.5993%" y="565" width="0.1842%" height="15" fill="rgb(206,209,35)" fg:x="2819694223" fg:w="5434055"/><text x="95.8493%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21,245,603 samples, 0.72%)</title><rect x="95.4152%" y="597" width="0.7203%" height="15" fill="rgb(245,195,53)" fg:x="2814263212" fg:w="21245603"/><text x="95.6652%" y="607.50"></text></g><g><title>do_syscall_64 (15,814,592 samples, 0.54%)</title><rect x="95.5993%" y="581" width="0.5362%" height="15" fill="rgb(240,92,26)" fg:x="2819694223" fg:w="15814592"/><text x="95.8493%" y="591.50"></text></g><g><title>x64_sys_call (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="565" width="0.3519%" height="15" fill="rgb(207,40,23)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="575.50"></text></g><g><title>__x64_sys_exit_group (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="549" width="0.3519%" height="15" fill="rgb(223,111,35)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="559.50"></text></g><g><title>do_group_exit (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="533" width="0.3519%" height="15" fill="rgb(229,147,28)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="543.50"></text></g><g><title>do_exit (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="517" width="0.3519%" height="15" fill="rgb(211,29,28)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="527.50"></text></g><g><title>exit_mm (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="501" width="0.3519%" height="15" fill="rgb(228,72,33)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="511.50"></text></g><g><title>__mmput (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="485" width="0.3519%" height="15" fill="rgb(205,214,31)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="495.50"></text></g><g><title>exit_mmap (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="469" width="0.3519%" height="15" fill="rgb(224,111,15)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="479.50"></text></g><g><title>unmap_vmas (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="453" width="0.3519%" height="15" fill="rgb(253,21,26)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="463.50"></text></g><g><title>unmap_page_range (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="437" width="0.3519%" height="15" fill="rgb(245,139,43)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="447.50"></text></g><g><title>zap_pud_range.isra.0 (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="421" width="0.3519%" height="15" fill="rgb(252,170,7)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="431.50"></text></g><g><title>zap_pmd_range.isra.0 (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="405" width="0.3519%" height="15" fill="rgb(231,118,14)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="415.50"></text></g><g><title>zap_pte_range (10,380,537 samples, 0.35%)</title><rect x="95.7836%" y="389" width="0.3519%" height="15" fill="rgb(238,83,0)" fg:x="2825128278" fg:w="10380537"/><text x="96.0336%" y="399.50"></text></g><g><title>tlb_flush_mmu (5,143,443 samples, 0.17%)</title><rect x="95.9611%" y="373" width="0.1744%" height="15" fill="rgb(221,39,39)" fg:x="2830365372" fg:w="5143443"/><text x="96.2111%" y="383.50"></text></g><g><title>__tlb_batch_free_encoded_pages (5,143,443 samples, 0.17%)</title><rect x="95.9611%" y="357" width="0.1744%" height="15" fill="rgb(222,119,46)" fg:x="2830365372" fg:w="5143443"/><text x="96.2111%" y="367.50"></text></g><g><title>free_pages_and_swap_cache (5,143,443 samples, 0.17%)</title><rect x="95.9611%" y="341" width="0.1744%" height="15" fill="rgb(222,165,49)" fg:x="2830365372" fg:w="5143443"/><text x="96.2111%" y="351.50"></text></g><g><title>folios_put_refs (5,143,443 samples, 0.17%)</title><rect x="95.9611%" y="325" width="0.1744%" height="15" fill="rgb(219,113,52)" fg:x="2830365372" fg:w="5143443"/><text x="96.2111%" y="335.50"></text></g><g><title>__page_cache_release.part.0 (5,143,443 samples, 0.17%)</title><rect x="95.9611%" y="309" width="0.1744%" height="15" fill="rgb(214,7,15)" fg:x="2830365372" fg:w="5143443"/><text x="96.2111%" y="319.50"></text></g><g><title>lru_gen_del_folio.constprop.0 (5,143,443 samples, 0.17%)</title><rect x="95.9611%" y="293" width="0.1744%" height="15" fill="rgb(235,32,4)" fg:x="2830365372" fg:w="5143443"/><text x="96.2111%" y="303.50"></text></g><g><title>__mod_zone_page_state (5,143,443 samples, 0.17%)</title><rect x="95.9611%" y="277" width="0.1744%" height="15" fill="rgb(238,90,54)" fg:x="2830365372" fg:w="5143443"/><text x="96.2111%" y="287.50"></text></g><g><title>malloc (21,743,786 samples, 0.74%)</title><rect x="96.1355%" y="597" width="0.7372%" height="15" fill="rgb(213,208,19)" fg:x="2835508815" fg:w="21743786"/><text x="96.3855%" y="607.50"></text></g><g><title>src_tauri::search_engine::fast_fuzzy_v2::test_large_dataset_performance::add_paths_from_dir (85,343,580 samples, 2.89%)</title><rect x="96.8728%" y="597" width="2.8935%" height="15" fill="rgb(233,156,4)" fg:x="2857254849" fg:w="85343580"/><text x="97.1228%" y="607.50">sr..</text></g><g><title>src-tauri (2,948,016,904 samples, 99.95%)</title><rect x="0.0003%" y="613" width="99.9500%" height="15" fill="rgb(207,194,5)" fg:x="9303" fg:w="2948016904"/><text x="0.2503%" y="623.50">src-tauri</text></g><g><title>std::path::Path::_join (5,427,778 samples, 0.18%)</title><rect x="99.7663%" y="597" width="0.1840%" height="15" fill="rgb(206,111,30)" fg:x="2942598429" fg:w="5427778"/><text x="100.0163%" y="607.50"></text></g><g><title>userfaultfd_remove (707,312 samples, 0.02%)</title><rect x="99.9529%" y="469" width="0.0240%" height="15" fill="rgb(243,70,54)" fg:x="2948100898" fg:w="707312"/><text x="100.2029%" y="479.50"></text></g><g><title>__madvise (972,289 samples, 0.03%)</title><rect x="99.9529%" y="565" width="0.0330%" height="15" fill="rgb(242,28,8)" fg:x="2948100898" fg:w="972289"/><text x="100.2029%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (972,289 samples, 0.03%)</title><rect x="99.9529%" y="549" width="0.0330%" height="15" fill="rgb(219,106,18)" fg:x="2948100898" fg:w="972289"/><text x="100.2029%" y="559.50"></text></g><g><title>do_syscall_64 (972,289 samples, 0.03%)</title><rect x="99.9529%" y="533" width="0.0330%" height="15" fill="rgb(244,222,10)" fg:x="2948100898" fg:w="972289"/><text x="100.2029%" y="543.50"></text></g><g><title>__x64_sys_madvise (972,289 samples, 0.03%)</title><rect x="99.9529%" y="517" width="0.0330%" height="15" fill="rgb(236,179,52)" fg:x="2948100898" fg:w="972289"/><text x="100.2029%" y="527.50"></text></g><g><title>do_madvise (972,289 samples, 0.03%)</title><rect x="99.9529%" y="501" width="0.0330%" height="15" fill="rgb(213,23,39)" fg:x="2948100898" fg:w="972289"/><text x="100.2029%" y="511.50"></text></g><g><title>madvise_vma_behavior (972,289 samples, 0.03%)</title><rect x="99.9529%" y="485" width="0.0330%" height="15" fill="rgb(238,48,10)" fg:x="2948100898" fg:w="972289"/><text x="100.2029%" y="495.50"></text></g><g><title>__munmap (376,538 samples, 0.01%)</title><rect x="99.9858%" y="549" width="0.0128%" height="15" fill="rgb(251,196,23)" fg:x="2949073219" fg:w="376538"/><text x="100.2358%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (376,538 samples, 0.01%)</title><rect x="99.9858%" y="533" width="0.0128%" height="15" fill="rgb(250,152,24)" fg:x="2949073219" fg:w="376538"/><text x="100.2358%" y="543.50"></text></g><g><title>do_syscall_64 (376,538 samples, 0.01%)</title><rect x="99.9858%" y="517" width="0.0128%" height="15" fill="rgb(209,150,17)" fg:x="2949073219" fg:w="376538"/><text x="100.2358%" y="527.50"></text></g><g><title>__x64_sys_munmap (376,538 samples, 0.01%)</title><rect x="99.9858%" y="501" width="0.0128%" height="15" fill="rgb(234,202,34)" fg:x="2949073219" fg:w="376538"/><text x="100.2358%" y="511.50"></text></g><g><title>__vm_munmap (376,538 samples, 0.01%)</title><rect x="99.9858%" y="485" width="0.0128%" height="15" fill="rgb(253,148,53)" fg:x="2949073219" fg:w="376538"/><text x="100.2358%" y="495.50"></text></g><g><title>down_write_killable (376,538 samples, 0.01%)</title><rect x="99.9858%" y="469" width="0.0128%" height="15" fill="rgb(218,129,16)" fg:x="2949073219" fg:w="376538"/><text x="100.2358%" y="479.50"></text></g><g><title>rwsem_down_write_slowpath (376,538 samples, 0.01%)</title><rect x="99.9858%" y="453" width="0.0128%" height="15" fill="rgb(216,85,19)" fg:x="2949073219" fg:w="376538"/><text x="100.2358%" y="463.50"></text></g><g><title>all (2,949,491,229 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(235,228,7)" fg:x="0" fg:w="2949491229"/><text x="0.2500%" y="639.50"></text></g><g><title>tokio-runtime-w (1,465,022 samples, 0.05%)</title><rect x="99.9503%" y="613" width="0.0497%" height="15" fill="rgb(245,175,0)" fg:x="2948026207" fg:w="1465022"/><text x="100.2003%" y="623.50"></text></g><g><title>__GI___clone3 (1,465,022 samples, 0.05%)</title><rect x="99.9503%" y="597" width="0.0497%" height="15" fill="rgb(208,168,36)" fg:x="2948026207" fg:w="1465022"/><text x="100.2003%" y="607.50"></text></g><g><title>start_thread (1,465,022 samples, 0.05%)</title><rect x="99.9503%" y="581" width="0.0497%" height="15" fill="rgb(246,171,24)" fg:x="2948026207" fg:w="1465022"/><text x="100.2003%" y="591.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (418,010 samples, 0.01%)</title><rect x="99.9858%" y="565" width="0.0142%" height="15" fill="rgb(215,142,24)" fg:x="2949073219" fg:w="418010"/><text x="100.2358%" y="575.50"></text></g></svg></svg>